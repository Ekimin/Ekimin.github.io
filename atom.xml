<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>(¬､¬)稳妥妥(￢_￢)</title>
  <subtitle>Ekimin的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wentuotuo.com/"/>
  <updated>2017-03-08T07:05:24.792Z</updated>
  <id>https://wentuotuo.com/</id>
  
  <author>
    <name>Ekimin</name>
    <email>heyiminwork@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git 教程</title>
    <link href="https://wentuotuo.com/2017/03/01/%E5%B7%A5%E5%85%B7/git-tutorial/"/>
    <id>https://wentuotuo.com/2017/03/01/工具/git-tutorial/</id>
    <published>2017-03-01T12:13:39.000Z</published>
    <updated>2017-03-08T07:05:24.792Z</updated>
    
    <content type="html"><![CDATA[<p>目录：</p>
<ul>
<li>Git 教程</li>
<li>使用 github 作为 git 托管服务器</li>
<li>Git 常用命令汇总</li>
</ul>
<a id="more"></a>
<h1 id="Git-教程"><a href="#Git-教程" class="headerlink" title="Git 教程"></a>Git 教程</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><ul>
<li>首先确认服务器是否安装Git </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# rpm -qa git</div><div class="line">git-1.7.1-3.el6_4.1.x86_64</div></pre></td></tr></table></figure>
<ul>
<li>若没有，则安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yum install git</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="建一个git用户，用来运行git服务"><a href="#建一个git用户，用来运行git服务" class="headerlink" title="建一个git用户，用来运行git服务"></a>建一个git用户，用来运行git服务</h2><ul>
<li>添加用户</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# adduser git</div></pre></td></tr></table></figure>
<p>此时在阿里云服务器的根目录：/home文件夹下会自动新增一个文件夹git</p>
<ul>
<li>按这个层级建立文件用于存放客户端用户的公钥：/home/git/.ssh/authorized_keys </li>
</ul>
<p>在本地客户端的git bash中通过命令：（windows先装Git客户端）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C &quot;heyiminwork@gmail.com&quot;</div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file in which to save the key (/c/Users/ymhe/.ssh/id_rsa):</div><div class="line">Created directory &apos;/c/Users/ymhe/.ssh&apos;.</div><div class="line">Enter passphrase (empty for no passphrase):</div><div class="line">Enter same passphrase again:</div><div class="line">Your identification has been saved in /c/Users/ymhe/.ssh/id_rsa.</div><div class="line">Your public key has been saved in /c/Users/ymhe/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:Wfx6+z6eD/Qn73vMmDugoe20otVTQjWEAxlT7+TcrWk heyiminwork@gmail.com</div><div class="line">The key&apos;s randomart image is:</div><div class="line">+---[RSA 2048]----+</div><div class="line">|        +=.o+    |</div><div class="line">|        .ooo .   |</div><div class="line">|          +.o    |</div><div class="line">|         + * . . |</div><div class="line">|        S . * o .|</div><div class="line">|         ..+.. + |</div><div class="line">|        .o=o..E=o|</div><div class="line">|       .o.o+ o===|</div><div class="line">|      .. oo .+*B*|</div><div class="line">+----[SHA256]-----+</div></pre></td></tr></table></figure>
<p>命令生成公钥，默认在c盘：用户/.ssh中id_rsa.pub文件是公钥，用记事本打开复制粘贴到服务器的/home/git/.ssh/authorized_keys文件中即可。</p>
<h2 id="服务器中建立git仓库"><a href="#服务器中建立git仓库" class="headerlink" title="服务器中建立git仓库"></a>服务器中建立git仓库</h2><ul>
<li>自己在服务器根目录新建一个专门用于存放仓库的git文件夹，如/usr/git<br>通过如下代码创建并初始化仓库,此时是以个空仓库：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ git]# git init --bare sample.git</div></pre></td></tr></table></figure>
</li>
</ul>
<p>裸仓库没有working dir，因为服务器上的git仓库纯粹是为了共享，仓库目录一般以.git结尾。然后把owner改为git：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ git]# chown -R git:git sample.git</div><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ git]# ll</div><div class="line">total 4</div><div class="line">drwxr-xr-x 7 git git 4096 Nov 18 10:37 sample.git</div></pre></td></tr></table></figure>
<h2 id="禁止git用户登录Shell"><a href="#禁止git用户登录Shell" class="headerlink" title="禁止git用户登录Shell"></a>禁止git用户登录Shell</h2><p>出于安全考虑，git用户不应该登录shell。修改方法：编辑/etc/passwd，找到类似一行：<br>git:x:500:500::/home/git:/bin/bash<br>改为<br>git:x:500:500::/home/git:/usr/bin/git-shell<br>这样，git用户可以正常通过ssh使用git，但无法登录shell。</p>
<h2 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h2><p>在Git Bash客户端就可以通过ssh克隆仓库了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ymhe@DESKTOP-B29K8H5 MINGW64 /e/git</div><div class="line">$ git clone git@47.90.56.252:/usr/git/sample.git</div><div class="line">Cloning into &apos;sample&apos;...</div><div class="line">The authenticity of host &apos;47.90.56.252 (47.90.56.252)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is SHA256:uc0hmvJyknGJsyCyFWrcO/BXAK4CEqo8bVobSSccmNg.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added &apos;47.90.56.252&apos; (RSA) to the list of known hosts.</div><div class="line">warning: You appear to have cloned an empty repository.</div><div class="line"></div><div class="line">ymhe@DESKTOP-B29K8H5 MINGW64 /e/git</div><div class="line">$ ll</div><div class="line">total 0</div><div class="line">drwxr-xr-x 1 ymhe 197121 0 11月 18 10:46 sample/</div></pre></td></tr></table></figure>
<hr>
<h1 id="使用-Github"><a href="#使用-Github" class="headerlink" title="使用 Github"></a>使用 Github</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><br></p>
<h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><p><a href="https://github.com" target="_blank" rel="external">全球最大同性交友社区</a><br><br></p>
<h2 id="安装-amp-配置git"><a href="#安装-amp-配置git" class="headerlink" title="安装&amp;配置git"></a>安装&amp;配置git</h2><p><br></p>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><ul>
<li>Linux<br>一般linux系统自带git，没有的话可以到对应仓库安装</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install git</div><div class="line"># or</div><div class="line">apt-get install git</div></pre></td></tr></table></figure>
<ul>
<li>Windows &amp; Mac<br>直接下载<a href="https://desktop.github.com/" target="_blank" rel="external">github Desktop客户端</a>安装</li>
</ul>
<p><br></p>
<h3 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h3><ul>
<li>生成本地 ssh key<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;emailsample@gmail.com&quot; #Email为github上注册的邮箱</div></pre></td></tr></table></figure>
</li>
</ul>
<p>之后会要求确认路径和输入密码，使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。（id_rsa是私钥，id_rsa.pub是公钥）</p>
<ul>
<li><p>添加公钥添加到github<br>登录github上，进入 Account Settings，左边选择SSH and GPG Keys，New SSH Key,title随便填，粘贴在你电脑上生成的公钥。<br><br><br><img src="leanote://file/getImage?fileId=581980ceab644162e100b4ba" alt=""></p>
</li>
<li><p>验证ssh key是否生效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#本地shell执行</div><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ul>
<p>第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p>
<ul>
<li>设置username email<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;Ekimin&quot; #双引号中为用户名</div><div class="line">git config --global user.email &quot;heyiminwork@gmail.com&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个命令，会在“~/.gitconfig”中以如下形式输出设置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ ~]$ cat ~/.gitconfig </div><div class="line">[user]</div><div class="line">	name = Ekimin</div><div class="line">	email = heyiminwork@gmail.com</div></pre></td></tr></table></figure></p>
<p>想更改这些信息时，可以直接编辑这个设置文件。这里设置的姓名和邮箱地址会用在Git的提交日志中。由于在GitHub上公开仓库时，这里的姓名和邮箱地址也会随着提交日志一同被公开，所以请不要使用不便公开的隐私信息。</p>
<ul>
<li>提高命令的可读性</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ ~]$ git config --global color.ui auto</div></pre></td></tr></table></figure>
<hr>
<h2 id="使用github"><a href="#使用github" class="headerlink" title="使用github"></a>使用github</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>在主页点击创建仓库 New repository<br><img src="leanote://file/getImage?fileId=581980ceab644162e100b4b8" alt=""><br><br><br>新建仓库时：<br><img src="leanote://file/getImage?fileId=581980ceab644162e100b4b7" alt=""></p>
<ul>
<li>Initialize this repository with a README<br>  支持MarkDown语法，一般新仓库都建议勾选该项</li>
<li>Add .gitignore<br>  这个设定会帮我们把不需要在Git仓库中进行版本管理的文件记录在.gitignore文件中，省去了每次根据框架进行设置的麻烦。</li>
<li>Add a license<br>  许可协议文件。如果这个仓库中包含的代码已经确定了许可协议，那么请在这里进行选择。随后将自动生成包含许可协议内容的LICENSE 文件，用来表明该仓库内容的许可协议。</li>
</ul>
<p>仓库创建好后，链接为：<a href="https://github.com/用户名/Hello-Word" target="_blank" rel="external">https://github.com/用户名/Hello-Word</a><br><br><br><strong>拓展：公开时的许可协议:</strong><br><img src="leanote://file/getImage?fileId=581980ceab644162e100b4b9" alt=""></p>
<h3 id="公开代码"><a href="#公开代码" class="headerlink" title="公开代码"></a>公开代码</h3><ul>
<li><p>克隆新建的仓库<br><img src="leanote://file/getImage?fileId=581980ceab644162e100b4b6" alt=""><br><br>github主页或者客户端中都可以获取仓库SSH代码，用于检出。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ git]$ git clone git@github.com:Ekimin/hello-world.git</div><div class="line">Initialized empty Git repository in /home/ymhe/git/hello-world/.git/</div><div class="line">remote: Counting objects: 13, done.</div><div class="line">remote: Compressing objects: 100% (8/8), done.</div><div class="line">remote: Total 13 (delta 1), reused 3 (delta 0), pack-reused 0</div><div class="line">Receiving objects: 100% (13/13), done.</div><div class="line">Resolving deltas: 100% (1/1), done.</div><div class="line">#clone的仓库会保存在当前目录下</div><div class="line">[ymhe@iZ114e8q2mjZ git]$ ll</div><div class="line">total 4</div><div class="line">drwxr-xr-x 3 ymhe ymhe 4096 Sep 30 14:52 hello-world</div></pre></td></tr></table></figure>
</li>
<li><p>进入目录，新建测试文件hello-world.php</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ git]$ cd hello-world/</div><div class="line">[ymhe@iZ114e8q2mjZ hello-world]$ ll</div><div class="line">total 4</div><div class="line">-rw-rw-r-- 1 ymhe ymhe 145 Sep 30 14:52 README.md</div><div class="line">[ymhe@iZ114e8q2mjZ hello-world]$ vim hello-world.php #随便写点东西进去</div></pre></td></tr></table></figure>
<ul>
<li>查看状态</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ hello-world]$ git status</div><div class="line"># On branch master</div><div class="line"># Untracked files:</div><div class="line">#   (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</div><div class="line">#</div><div class="line">#	hello-world.php</div><div class="line">nothing added to commit but untracked files present (use &quot;git add&quot; to track)</div></pre></td></tr></table></figure>
<p>由于新建的文件还没有提交到git仓库，所以显示为“Untracked files”。</p>
<ul>
<li>提交</li>
</ul>
<p>将hello-world.php提交至仓库,这样一来，这个文件就进入了版本管理系统的管理之下。今后的更改管理都交由Git进行。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ hello-world]$ git add hello-world.php</div><div class="line">[ymhe@iZ114e8q2mjZ hello-world]$ git commit -m &quot;Add hello-world.php&quot;</div><div class="line">[master 9cd88ce] Add hello-world.php</div><div class="line"> 1 files changed, 3 insertions(+), 0 deletions(-)</div><div class="line"> create mode 100644 hello-world.php</div></pre></td></tr></table></figure>
<p>git add 命令将文件提交至暂存区(在Index数据结构中记录文件提交之前的状态。)，再通过git commit提交，-m参数后添加本次提交的备注</p>
<ul>
<li>查看日志</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ hello-world]$ git log</div><div class="line">commit 9cd88ce54ba90d64d5908b20dd4571ae6fdfda60</div><div class="line">Author: Ekimin &lt;heyiminwork@gmail.com&gt;</div><div class="line">Date:   Fri Sep 30 15:17:42 2016 +0800</div><div class="line"></div><div class="line">    Add hello-world.php</div></pre></td></tr></table></figure>
<ul>
<li>进行push</li>
</ul>
<p>push会更新github上的仓库。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[ymhe@iZ114e8q2mjZ hello-world]$ git push</div><div class="line">Warning: Permanently added the RSA host key for IP address &apos;192.30.253.113&apos; to the list of known hosts.</div><div class="line">Counting objects: 4, done.</div><div class="line">Compressing objects: 100% (2/2), done.</div><div class="line">Writing objects: 100% (3/3), 316 bytes, done.</div><div class="line">Total 3 (delta 0), reused 0 (delta 0)</div><div class="line">To git@github.com:Ekimin/hello-world.git</div><div class="line">   0223614..9cd88ce  master -&gt; master</div></pre></td></tr></table></figure>
<p>至此，修改的代码便在github上公开了。可以查看链接<a href="http://github.com/用户名/hello-world" target="_blank" rel="external">http://github.com/用户名/hello-world</a></p>
<hr>
<h1 id="Git-常用命令汇总"><a href="#Git-常用命令汇总" class="headerlink" title="Git 常用命令汇总"></a>Git 常用命令汇总</h1><h2 id="初始化-git-init"><a href="#初始化-git-init" class="headerlink" title="初始化 git init"></a>初始化 git init</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init [-q | --quiet] [--bare] [--template=&lt;template-directory&gt;] [--shared[=&lt;permissions&gt;]] [&lt;directory&gt;]</div></pre></td></tr></table></figure>
<ul>
<li><p>在当前目录初始化一个仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git init</div><div class="line">Initialized empty Git repository in E:/IDEA/AlgoliaSearch/.git/</div></pre></td></tr></table></figure>
</li>
<li><p>在当前目录初始化一个裸库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init --bare</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add [&lt;options&gt;] &lt;name&gt; &lt;url&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git remote add origin git@github.com:Ekimin/AlgoliaSearch.git</div></pre></td></tr></table></figure>
<h2 id="第一次-push-到远程仓库"><a href="#第一次-push-到远程仓库" class="headerlink" title="第一次 push 到远程仓库"></a>第一次 push 到远程仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git push --set-upstream origin master</div><div class="line">Counting objects: 4, done.</div><div class="line">Delta compression using up to 2 threads.</div><div class="line">Compressing objects: 100% (4/4), done.</div><div class="line">Writing objects: 100% (4/4), 1.14 KiB | 0 bytes/s, done.</div><div class="line">Total 4 (delta 0), reused 0 (delta 0)</div><div class="line">To github.com:Ekimin/AlgoliaSearch.git</div><div class="line"> * [new branch]      master -&gt; master</div><div class="line">Branch master set up to track remote branch master from origin.</div></pre></td></tr></table></figure>
<h2 id="场景：在本地新建分支-dev，push到远程仓库（远程没有dev分支）"><a href="#场景：在本地新建分支-dev，push到远程仓库（远程没有dev分支）" class="headerlink" title="场景：在本地新建分支 dev，push到远程仓库（远程没有dev分支）"></a>场景：在本地新建分支 dev，push到远程仓库（远程没有dev分支）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git branch</div><div class="line">* master</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git branch dev</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git branch</div><div class="line">  dev</div><div class="line">* master</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git checkout dev</div><div class="line">Switched to branch &apos;dev&apos;</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git push --set-upstream origin dev</div><div class="line">Total 0 (delta 0), reused 0 (delta 0)</div><div class="line">To github.com:Ekimin/AlgoliaSearch.git</div><div class="line"> * [new branch]      dev -&gt; dev</div><div class="line">Branch dev set up to track remote branch dev from origin.</div></pre></td></tr></table></figure>
<h2 id="删除分支-dev"><a href="#删除分支-dev" class="headerlink" title="删除分支 dev"></a>删除分支 dev</h2><ul>
<li>删除本地分支 dev<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch -d &lt;branch-name&gt; </div><div class="line">git branch -D &lt;branch-name&gt; #强制删除（分支没有merge也会被删除）</div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git branch</div><div class="line">* dev</div><div class="line">  master</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git branch -d dev</div><div class="line">error: Cannot delete branch &apos;dev&apos; checked out at &apos;E:/IDEA/AlgoliaSearch&apos;</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git checkout master</div><div class="line">Switched to branch &apos;master&apos;</div><div class="line">Your branch is up-to-date with &apos;origin/master&apos;.</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git branch -d dev</div><div class="line">Deleted branch dev (was 74a7280).</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git branch</div><div class="line">* master</div></pre></td></tr></table></figure>
<ul>
<li>删除远程分支 dev</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git push origin :dev</div><div class="line">To github.com:Ekimin/AlgoliaSearch.git</div><div class="line"> - [deleted]         dev</div></pre></td></tr></table></figure>
<h2 id="add添加到缓存区、commit提交、push推送"><a href="#add添加到缓存区、commit提交、push推送" class="headerlink" title="add添加到缓存区、commit提交、push推送"></a>add添加到缓存区、commit提交、push推送</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add [&lt;options&gt;] [--] &lt;pathspec&gt;...</div><div class="line">git commit [&lt;options&gt;] [--] &lt;pathspec&gt;...</div><div class="line">git push [&lt;options&gt;] [&lt;repository&gt; [&lt;refspec&gt;...]]</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git status</div><div class="line">On branch master</div><div class="line">Your branch is up-to-date with &apos;origin/master&apos;.</div><div class="line">Untracked files:</div><div class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</div><div class="line"></div><div class="line">        src/</div><div class="line"></div><div class="line">nothing added to commit but untracked files present (use &quot;git add&quot; to track)</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git add .</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git commit -m &quot;new class&quot;</div><div class="line">[master 978b221] new class</div><div class="line"> 1 file changed, 8 insertions(+)</div><div class="line"> create mode 100644 src/main/java/com/wentuouto/algolia/app/Algolia.java</div><div class="line"></div><div class="line">E:\IDEA\AlgoliaSearch&gt;git push origin master</div><div class="line">Counting objects: 10, done.</div><div class="line">Delta compression using up to 2 threads.</div><div class="line">Compressing objects: 100% (3/3), done.</div><div class="line">Writing objects: 100% (10/10), 704 bytes | 0 bytes/s, done.</div><div class="line">Total 10 (delta 0), reused 0 (delta 0)</div><div class="line">To github.com:Ekimin/AlgoliaSearch.git</div><div class="line">   74a7280..978b221  master -&gt; master</div></pre></td></tr></table></figure>
<h2 id="查看远程分支"><a href="#查看远程分支" class="headerlink" title="查看远程分支"></a>查看远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">E:\IDEA\AlgoliaSearch&gt;git remote -v</div><div class="line">origin  git@github.com:Ekimin/AlgoliaSearch.git (fetch)</div><div class="line">origin  git@github.com:Ekimin/AlgoliaSearch.git (push)</div></pre></td></tr></table></figure>
<hr>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://www.cnblogs.com/mengdd/p/3447464.html" target="_blank" rel="external">在GitHub上管理项目</a></li>
<li><a href="http://www.ihref.com/read-16369.html" target="_blank" rel="external">Git版本控制软件结合GitHub从入门到精通常用命令学习手册</a></li>
<li><a href="https://github.com/github/gitignore/blob/master/Java.gitignore" target="_blank" rel="external">gitignore文件</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰Git教程</a></li>
</ul>
<h1 id="错误汇总"><a href="#错误汇总" class="headerlink" title="错误汇总"></a>错误汇总</h1><h2 id="git在push的时候出现insufficient-permission-for-adding-an-object错误"><a href="#git在push的时候出现insufficient-permission-for-adding-an-object错误" class="headerlink" title="git在push的时候出现insufficient permission for adding an object错误"></a>git在push的时候出现insufficient permission for adding an object错误</h2><p><a href="http://blog.csdn.net/yujunf/article/details/7595231" target="_blank" rel="external">http://blog.csdn.net/yujunf/article/details/7595231</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Git 教程&lt;/li&gt;
&lt;li&gt;使用 github 作为 git 托管服务器&lt;/li&gt;
&lt;li&gt;Git 常用命令汇总&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="工具" scheme="https://wentuotuo.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Github" scheme="https://wentuotuo.com/tags/Github/"/>
    
      <category term="Git" scheme="https://wentuotuo.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Java实现AES加密解密</title>
    <link href="https://wentuotuo.com/2017/02/24/Java/AES-encrypt-java/"/>
    <id>https://wentuotuo.com/2017/02/24/Java/AES-encrypt-java/</id>
    <published>2017-02-24T02:22:51.000Z</published>
    <updated>2017-03-08T07:05:24.783Z</updated>
    
    <content type="html"><![CDATA[<p>AES是一个对称分组密码算法，由美国国家标准技术研究所在2001年发布，旨在取代DES成为广泛使用的标准。</p>
<p>本文记录了Java实现AES算法进行加密解密，实际测试时还用到了Base64进行变换，以便于存储。</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.wentuotuo.aes;</div><div class="line"></div><div class="line"><span class="keyword">import</span> sun.misc.BASE64Decoder;</div><div class="line"><span class="keyword">import</span> sun.misc.BASE64Encoder;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.crypto.*;</div><div class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</div><div class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</div><div class="line"><span class="keyword">import</span> java.security.Security;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by Ekimin on 2017/2/23.</div><div class="line"> * UniTest</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AESMethod</span> </span>&#123;</div><div class="line">    <span class="comment">//KeyGenerator 提供对称密钥生成器的功能，支持各种算法</span></div><div class="line">    <span class="keyword">private</span> KeyGenerator keygen;</div><div class="line">    <span class="comment">//SecretKey 负责保存对称密钥</span></div><div class="line">    <span class="keyword">private</span> SecretKey deskey;</div><div class="line">    <span class="comment">//Cipher负责完成加密或解密工作</span></div><div class="line">    <span class="keyword">private</span> Cipher c;</div><div class="line">    <span class="comment">//该字节数组负责保存加密的结果</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] cipherByte;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AESMethod</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchAlgorithmException, NoSuchPaddingException</span>&#123;</div><div class="line">        Security.addProvider(<span class="keyword">new</span> com.sun.crypto.provider.SunJCE());</div><div class="line">        <span class="comment">//实例化支持DES算法的密钥生成器(算法名称命名需按规定，否则抛出异常)</span></div><div class="line">        keygen = KeyGenerator.getInstance(<span class="string">"AES"</span>);</div><div class="line">        <span class="comment">//生成密钥</span></div><div class="line">        deskey = keygen.generateKey();</div><div class="line">        <span class="comment">//生成Cipher对象,指定其支持的DES算法</span></div><div class="line">        c = Cipher.getInstance(<span class="string">"AES"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 对字符串加密</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     * <span class="doctag">@throws</span> InvalidKeyException</div><div class="line">     * <span class="doctag">@throws</span> IllegalBlockSizeException</div><div class="line">     * <span class="doctag">@throws</span> BadPaddingException</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] Encrytor(String str) <span class="keyword">throws</span> InvalidKeyException,</div><div class="line">            IllegalBlockSizeException, BadPaddingException &#123;</div><div class="line">        <span class="comment">// 根据密钥，对Cipher对象进行初始化，ENCRYPT_MODE表示加密模式</span></div><div class="line">        c.init(Cipher.ENCRYPT_MODE, deskey);</div><div class="line">        <span class="keyword">byte</span>[] src = str.getBytes();</div><div class="line">        <span class="comment">// 加密，结果保存进cipherByte</span></div><div class="line">        cipherByte = c.doFinal(src);</div><div class="line">        <span class="keyword">return</span> cipherByte;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 对字符串解密</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> buff</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     * <span class="doctag">@throws</span> InvalidKeyException</div><div class="line">     * <span class="doctag">@throws</span> IllegalBlockSizeException</div><div class="line">     * <span class="doctag">@throws</span> BadPaddingException</div><div class="line">     */</div><div class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] Decryptor(<span class="keyword">byte</span>[] buff) <span class="keyword">throws</span> InvalidKeyException,</div><div class="line">            IllegalBlockSizeException, BadPaddingException &#123;</div><div class="line">        <span class="comment">// 根据密钥，对Cipher对象进行初始化，DECRYPT_MODE表示加密模式</span></div><div class="line">        c.init(Cipher.DECRYPT_MODE, deskey);</div><div class="line">        cipherByte = c.doFinal(buff);</div><div class="line">        <span class="keyword">return</span> cipherByte;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> args</div><div class="line">     * <span class="doctag">@throws</span> NoSuchPaddingException</div><div class="line">     * <span class="doctag">@throws</span> NoSuchAlgorithmException</div><div class="line">     * <span class="doctag">@throws</span> BadPaddingException</div><div class="line">     * <span class="doctag">@throws</span> IllegalBlockSizeException</div><div class="line">     * <span class="doctag">@throws</span> InvalidKeyException</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        AESMethod de1 = <span class="keyword">new</span> AESMethod();</div><div class="line">        String msg =<span class="string">"怕是要翻水水"</span>;</div><div class="line">        <span class="keyword">byte</span>[] encontent = de1.Encrytor(msg);</div><div class="line"></div><div class="line">        System.out.println(<span class="string">"明文是:"</span> + msg);</div><div class="line">        System.out.println(<span class="string">"加密后:"</span> + encontent);</div><div class="line">        BASE64Encoder base64Encoder = <span class="keyword">new</span> BASE64Encoder();</div><div class="line">        BASE64Decoder base64Decoder = <span class="keyword">new</span> BASE64Decoder();</div><div class="line">        String base64 = base64Encoder.encode(encontent);</div><div class="line">        System.out.println(<span class="string">"转为base64后:"</span> + base64);</div><div class="line">        <span class="keyword">byte</span>[] rawCode = base64Decoder.decodeBuffer(base64);</div><div class="line">        System.out.println(<span class="string">"base64还原:"</span> + rawCode);</div><div class="line"></div><div class="line">        <span class="keyword">byte</span>[] decontent = de1.Decryptor(rawCode);</div><div class="line">        System.out.println(<span class="string">"解密后:"</span> + <span class="keyword">new</span> String(decontent));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>测试结果</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">明文是:怕是要翻水水</div><div class="line">加密后:[B@a3a7a74</div><div class="line">转为base64后:ldQQ3iZzKBfUJ8o2ogQHxNcWfGvB1ddZja/+brSAx+A=</div><div class="line">base64还原:[B@7482384a</div><div class="line">解密后:怕是要翻水水</div></pre></td></tr></table></figure>
<p><a href="https://github.com/dhuertas/AES/blob/master/aes.c" target="_blank" rel="external">C语言实现的AES加密</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;AES是一个对称分组密码算法，由美国国家标准技术研究所在2001年发布，旨在取代DES成为广泛使用的标准。&lt;/p&gt;
&lt;p&gt;本文记录了Java实现AES算法进行加密解密，实际测试时还用到了Base64进行变换，以便于存储。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://wentuotuo.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wentuotuo.com/tags/Java/"/>
    
      <category term="AES" scheme="https://wentuotuo.com/tags/AES/"/>
    
      <category term="加密" scheme="https://wentuotuo.com/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>用 Hexo 搭建个人博客</title>
    <link href="https://wentuotuo.com/2017/02/05/%E5%8D%9A%E5%AE%A2/use-hexo-siteup-personal-blog/"/>
    <id>https://wentuotuo.com/2017/02/05/博客/use-hexo-siteup-personal-blog/</id>
    <published>2017-02-05T03:55:13.000Z</published>
    <updated>2017-03-08T09:38:44.982Z</updated>
    
    <content type="html"><![CDATA[<p>目录：</p>
<ul>
<li>Hexo 博客原理</li>
<li>Hexo + Github 搭建个人博客</li>
<li>Hexo + VPS 搭建个人博客</li>
<li>博客备份和还原</li>
<li>主题优化</li>
</ul>
<a id="more"></a>
<h1 id="Hexo-博客原理"><a href="#Hexo-博客原理" class="headerlink" title="Hexo 博客原理"></a>Hexo 博客原理</h1><h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>Hexo 是一个简单地、轻量地、基于Node的一个静态博客框架，可以将支持的类型的文件转换成静态Web页面（html+css+JavaScript），hexo是不支持动态页面的（如jsp等）。<br>下面是一张架构图：<br><img src="http://oduq3lfcc.bkt.clouddn.com/hexo%E5%8D%9A%E5%AE%A2%E6%9E%B6%E6%9E%84.png" alt=""></p>
<p>大致流程：将 *.md 渲染成静态文件，然后Git推送到服务器的repository,服务器再通过 git-hooks 同步网站根目录。</p>
<h2 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h2><p>了解了原理，不难理解 Hexo 博客的搭建流程，大致以下几步。</p>
<ul>
<li>服务器环境搭建，包括安装 Git 、Nginx配置 、创建 git 用户 。</li>
<li>本地 Hexo 初始化， 包括安装 NodeJS 、Hexo-cli, 生成本地静态网站</li>
<li>使用Git自动化部署发布博客</li>
</ul>
<p><strong>注：如果使用 Github 作为远程博客仓库，那么第一步就省了，因为 Github 的程序员已经帮我们做好了。</strong></p>
<h1 id="Hexo-github-搭建个人博客"><a href="#Hexo-github-搭建个人博客" class="headerlink" title="Hexo + github 搭建个人博客"></a>Hexo + github 搭建个人博客</h1><p>使用 Github 作为远程博客仓库优势多多，首先繁琐的服务器环境搭建不用我们操心了，而且也不用担心服务器挂掉，当然免费也是一项大优势。<br>具体搭建过程参考本人另一篇博文：<a href="http://wentuotuo.com/2016/10/13/%E5%8D%9A%E5%AE%A2/hexo-blog-based-on-github/">传送门</a></p>
<h1 id="Hexo-VPS-搭建个人博客"><a href="#Hexo-VPS-搭建个人博客" class="headerlink" title="Hexo + VPS 搭建个人博客"></a>Hexo + VPS 搭建个人博客</h1><p>如果你有个人VPS，想把博客搭建到自己的服务器上，那么在上面步骤之前还需要在自己服务器上部署一些环境</p>
<p>本文测试环境：<br>VPS：阿里云香港服务器一台<br>系统：CentOs 7</p>
<h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>终端直接输入 git 查看是否安装有（默认CentOs 会自带git），如果没有，那么先安装 git。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install git</div></pre></td></tr></table></figure>
<h2 id="安装-NodeJS"><a href="#安装-NodeJS" class="headerlink" title="安装 NodeJS"></a>安装 NodeJS</h2><p>根据你的VPS操作系统选择安装不同的版本，官方安装文档：<a href="https://nodejs.org/en/download/package-manager" target="_blank" rel="external">传送门</a></p>
<p>我的OS是CentOs的，所以我选择 ArchLinux，然后里面定位到CentOs的安装命令：</p>
<p><img src="http://oduq3lfcc.bkt.clouddn.com/nodejs%E4%B8%8B%E8%BD%BD.png" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -</div><div class="line">yum install nodejs</div></pre></td></tr></table></figure>
<h2 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ blog.git]<span class="comment"># npm install -g hexo</span></div></pre></td></tr></table></figure>
<h2 id="新建-git-用户"><a href="#新建-git-用户" class="headerlink" title="新建 git 用户"></a>新建 git 用户</h2><p><strong>虽然用 root 也能完成，但是为了安全起见，我们还是应该新建一个 git 用户来专门进行博客的管理，而不是全部事情都丢给 root。</strong></p>
<ul>
<li>查看系统内是否已经有 git 用户</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># cat /etc/passwd</span></div></pre></td></tr></table></figure>
<h3 id="新建-git-用户-1"><a href="#新建-git-用户-1" class="headerlink" title="新建 git 用户"></a>新建 git 用户</h3><p>新建一个名叫 git 的用户，如果之前已经建立了，则跳过此命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adduser git</div></pre></td></tr></table></figure></p>
<h3 id="给-git-用户添加-sudo-权限"><a href="#给-git-用户添加-sudo-权限" class="headerlink" title="给 git 用户添加 sudo 权限"></a>给 git 用户添加 sudo 权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod 740 /etc/sudoers</div><div class="line">vim /etc/sudoers</div></pre></td></tr></table></figure>
<p>定位到以下内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## Allow root to run any commands anywhere</span></div><div class="line">root    ALL=(ALL)     ALL</div></pre></td></tr></table></figure></p>
<p>然后在下面新增一行:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git ALL=(ALL) ALL</div></pre></td></tr></table></figure>
<p>添加后效果如图：</p>
<p><img src="http://oduq3lfcc.bkt.clouddn.com/git%E9%85%8D%E7%BD%AEsudoer%E6%9D%83%E9%99%90.png" alt=""></p>
<p>保存编辑后退出。</p>
<p><strong>PS：如果不熟悉VI或者VIM的使用，参考<a href="http://www.cnblogs.com/jiayongji/p/5771444.html" target="_blank" rel="external">Linux vi/vim编辑器常用命令与用法总结</a></strong></p>
<p>别忘了把文件权限改回去（还是为了安全）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 400 /etc/sudoers</div></pre></td></tr></table></figure>
<h3 id="给-git-用户设置密码"><a href="#给-git-用户设置密码" class="headerlink" title="给 git 用户设置密码"></a>给 git 用户设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo passwd git <span class="comment">#该命令执行后输入两次要设置的密码</span></div></pre></td></tr></table></figure>
<h3 id="创建证书登录"><a href="#创建证书登录" class="headerlink" title="创建证书登录"></a>创建证书登录</h3><p>把自己电脑的公钥，也就是 ~/.ssh/id_rsa.pub 文件里的内容添加到服务器的 /home/git/.ssh/authorized_keys 文件中，添加公钥之后可以防止每次 push 都输入密码</p>
<p>例如，我的Windows电脑里面的id_rsa.pub文件存放在：<br><img src="http://oduq3lfcc.bkt.clouddn.com/rsapub.png" alt=""><br>如果你本地机器是Linux系统，那么该文件路径应该在：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~/.ssh/ <span class="comment">#当前用户主目录下的.ssh文件夹中</span></div></pre></td></tr></table></figure>
<p>如果你发现并没有id_rsa.pub文件，那么说明之前没有生成过，请参考 <a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="external">生成SSH Key</a></p>
<p>服务器中/home/git/.ssh/authorized_keys文件在这里：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ git]<span class="comment"># cd /home/git </span></div><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ git]<span class="comment"># ls -al</span></div><div class="line">total 24</div><div class="line">drwx------  3 git  git  4096 Nov 18 10:26 .</div><div class="line">drwxr-xr-x. 5 root root 4096 Nov 21 16:15 ..</div><div class="line">-rw-r--r--  1 git  git    18 Oct 16  2014 .bash_logout</div><div class="line">-rw-r--r--  1 git  git   176 Oct 16  2014 .bash_profile</div><div class="line">-rw-r--r--  1 git  git   124 Oct 16  2014 .bashrc</div><div class="line">drwxr-xr-x  2 root root 4096 Nov 18 10:28 .ssh</div><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ git]<span class="comment"># cd .ssh</span></div><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ .ssh]<span class="comment"># ll</span></div><div class="line">total 4</div><div class="line">-rw-r--r-- 1 root root 404 Nov 18 10:27 authorized_keys</div></pre></td></tr></table></figure></p>
<p>将你本机的公钥添加到上面authorized_keys就可以了，多个key换行。</p>
<h3 id="设置-VPS-的-ssh-端口"><a href="#设置-VPS-的-ssh-端口" class="headerlink" title="设置 VPS 的 ssh 端口"></a>设置 VPS 的 ssh 端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ hexo]<span class="comment"># vim /etc/ssh/sshd_config</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Port 22</div></pre></td></tr></table></figure>
<h2 id="安装配置-Nginx"><a href="#安装配置-Nginx" class="headerlink" title="安装配置 Nginx"></a>安装配置 Nginx</h2><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ nginx]<span class="comment"># yum install nginx</span></div></pre></td></tr></table></figure>
<h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><ul>
<li>删除nginx虚拟主机配置文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ conf.d]<span class="comment"># rm -rf /etc/nginx/conf.d/*</span></div></pre></td></tr></table></figure>
<ul>
<li>新建 /etc/nginx/conf.d/git.conf 文件，将以下内容添加到其中</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">  root /var/www/hexo;  <span class="comment">#网站根目录</span></div><div class="line">  index index.html index.htm;</div><div class="line">  server_name www.wentuotuo.com;   <span class="comment">#你的域名</span></div><div class="line">  location / &#123;</div><div class="line">    try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>修改nginx配置文件</li>
</ul>
<p>将/etc/nginx/nginx.conf中的user值修改为 git<br>并新增：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">include /etc/nginx/sites-available/*.conf;</div><div class="line">include /var/www/*.conf;</div></pre></td></tr></table></figure></p>
<p>添加后配置文件如图：（红色方框内是新增内容）<br><img src="http://oduq3lfcc.bkt.clouddn.com/nginx-conf.png" alt=""></p>
<p><strong>测试配置是否正确</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ blog.git]<span class="comment"># nginx -t</span></div><div class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</div><div class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</div></pre></td></tr></table></figure>
<ul>
<li>配置防火墙</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ blog.git]<span class="comment"># iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span></div></pre></td></tr></table></figure>
<h3 id="启动-nginx"><a href="#启动-nginx" class="headerlink" title="启动 nginx"></a>启动 nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ blog.git]<span class="comment"># service nginx reload</span></div><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ blog.git]<span class="comment"># /etc/init.d/nginx start</span></div><div class="line">Starting nginx:                                            [  OK  ]</div></pre></td></tr></table></figure>
<h2 id="创建博客仓库"><a href="#创建博客仓库" class="headerlink" title="创建博客仓库"></a>创建博客仓库</h2><p>此处切换到 git 用户操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ .ssh]<span class="comment"># su git</span></div></pre></td></tr></table></figure></p>
<h3 id="创建放仓库的目录"><a href="#创建放仓库的目录" class="headerlink" title="创建放仓库的目录"></a>创建放仓库的目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ var]$ sudo mkdir /var/www/blog</div><div class="line"></div><div class="line">We trust you have received the usual lecture from the <span class="built_in">local</span> System</div><div class="line">Administrator. It usually boils down to these three things:</div><div class="line"></div><div class="line">    <span class="comment">#1) Respect the privacy of others.</span></div><div class="line">    <span class="comment">#2) Think before you type.</span></div><div class="line">    <span class="comment">#3) With great power comes great responsibility.</span></div><div class="line"></div><div class="line">[sudo] password <span class="keyword">for</span> git:</div></pre></td></tr></table></figure>
<p>这里有提示信息，可以忽视，输入前面设置的git用户的密码完成目录创建。目录路径可以自行改变，但是要保证git用户有相应权限。</p>
<h3 id="创建一个裸仓库-blog"><a href="#创建一个裸仓库-blog" class="headerlink" title="创建一个裸仓库 blog"></a>创建一个裸仓库 blog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ blog]$ sudo git init --bare blog.git</div><div class="line">[sudo] password <span class="keyword">for</span> git: </div><div class="line">Initialized empty Git repository <span class="keyword">in</span> /var/www/blog/blog.git/</div></pre></td></tr></table></figure>
<p>这样就创建了一个叫 blog 的裸仓库。<br>–bare 参数是告诉 Git 创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。</p>
<h2 id="配置-git-hooks"><a href="#配置-git-hooks" class="headerlink" title="配置 git hooks"></a>配置 git hooks</h2><p>参考资料：<a href="https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90" target="_blank" rel="external">自定义 Git - Git 钩子</a></p>
<p>我们这里要使用的是 post-receive 的 hook，这个 hook 会在整个 git 操作过程完结以后被运行。</p>
<h3 id="新建-post-receive-文件"><a href="#新建-post-receive-文件" class="headerlink" title="新建 post-receive 文件"></a>新建 post-receive 文件</h3><ul>
<li>在 /var/www/blog/blog.git/hook/ 目录下新建 post-receive 文件：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ hooks]$ <span class="built_in">cd</span> /var/www/blog/blog.git/hooks/</div><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ hooks]$ sudo vim post-receive</div></pre></td></tr></table></figure>
<ul>
<li>在新建的文件中输入以下信息并保存：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">GIT_REPO=/var/www/blog/blog.git <span class="comment">#换成你部署静态网页的git仓库</span></div><div class="line">TMP_GIT_CLONE=/tmp/HexoB<span class="built_in">log</span> <span class="comment">#临时文件目录</span></div><div class="line">PUBLIC_WWW=/var/www/hexo <span class="comment">#网站发布目录，即实际的网站目录，里面包含index.html等网站内容</span></div><div class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></div><div class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></div><div class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</div><div class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></div></pre></td></tr></table></figure>
<ul>
<li>给post-receive 文件添加执行权限</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ hooks]$ sudo chmod +x post-receive</div></pre></td></tr></table></figure>
<h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><h3 id="改变-blog-git-拥有者为-git-用户"><a href="#改变-blog-git-拥有者为-git-用户" class="headerlink" title="改变 blog.git 拥有者为 git 用户"></a>改变 blog.git 拥有者为 git 用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ hooks]$ <span class="built_in">cd</span> /var/www/blog/</div><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ blog]$ sudo chown -R git:git blog.git</div></pre></td></tr></table></figure>
<h3 id="改变-hexo-目录拥有者为-git-用户"><a href="#改变-hexo-目录拥有者为-git-用户" class="headerlink" title="改变 hexo 目录拥有者为 git 用户"></a>改变 hexo 目录拥有者为 git 用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ ~]$ <span class="built_in">cd</span> /var/www/</div><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ www]$ sudo chown -R git:git hexo</div></pre></td></tr></table></figure>
<h3 id="禁止-git-用户登录-shell"><a href="#禁止-git-用户登录-shell" class="headerlink" title="禁止 git 用户登录 shell"></a>禁止 git 用户登录 shell</h3><p>为了安全考虑，在配置好上面信息以后，禁止git用户登录shell。</p>
<p>cat /etc/passwd 查看系统用户信息，找到git用户哪一行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[git@iZj6c2vq0s1w6wkap2geanZ blog]$ cat /etc/passwd</div></pre></td></tr></table></figure></p>
<p>比如我的机器上是：<br>git:x:500:500::/home/git:/bin/bash</p>
<p>将其改为：<br>git:x:500:500::/home/git:/usr/bin/git-shell</p>
<p>这样 git 用户可以正常使用 git-shell 但是不能使用bin/bash, 也就不能登录shell了。</p>
<h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><p>在站点_config.yml 中配置deploy信息。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repository:</span> <span class="string">git@wentuotuo.com:/var/www/blog/blog.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure>
<p>repository换成你的VPS上博客仓库路径</p>
<hr>
<h1 id="用git进行博客备份和还原"><a href="#用git进行博客备份和还原" class="headerlink" title="用git进行博客备份和还原"></a>用git进行博客备份和还原</h1><h2 id="博客备份"><a href="#博客备份" class="headerlink" title="博客备份"></a>博客备份</h2><h2 id="博客还原（在新环境中继续撰写博客）"><a href="#博客还原（在新环境中继续撰写博客）" class="headerlink" title="博客还原（在新环境中继续撰写博客）"></a>博客还原（在新环境中继续撰写博客）</h2><ul>
<li>安装 git、nodejs、hexo环境（同上）</li>
<li><p>克隆博客仓库</p>
<blockquote>
<p>git clone [你的仓库URL]</p>
</blockquote>
</li>
<li><p>切换到源码分支（如果源码分支是默认分支，那么克隆过后会默认处于该分支下，不需要再手动切换）</p>
<blockquote>
<p>git checkout [你的分支名字]</p>
</blockquote>
</li>
<li><p>安装npm hexo 本地环境</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">npm install hexo --save <span class="comment">#安装hexo环境到本目录</span></div><div class="line">npm install <span class="comment">#安装npm 环境到本目录,该步骤不做的话可能会出现hexo generate过后缺少文件（如index页面）</span></div><div class="line">npm install hexo-deployer-git <span class="comment">#hexo通过git发布网页的插件</span></div><div class="line"></div><div class="line">npm install hexo-algolia --save <span class="comment">#使用algolia搜索的还需要安装此插件</span></div><div class="line"><span class="comment">#...其他插件安装</span></div></pre></td></tr></table></figure>
</li>
<li><p>环境恢复成功，可以使用hexo g -d 发布博客了 </p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hexo 博客原理&lt;/li&gt;
&lt;li&gt;Hexo + Github 搭建个人博客&lt;/li&gt;
&lt;li&gt;Hexo + VPS 搭建个人博客&lt;/li&gt;
&lt;li&gt;博客备份和还原&lt;/li&gt;
&lt;li&gt;主题优化&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="博客" scheme="https://wentuotuo.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://wentuotuo.com/tags/Hexo/"/>
    
      <category term="博客" scheme="https://wentuotuo.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Github" scheme="https://wentuotuo.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 笔记</title>
    <link href="https://wentuotuo.com/2017/01/16/%E5%B7%A5%E5%85%B7/IntelliJ-IDEA-tutorial/"/>
    <id>https://wentuotuo.com/2017/01/16/工具/IntelliJ-IDEA-tutorial/</id>
    <published>2017-01-16T06:13:57.000Z</published>
    <updated>2017-03-08T07:05:24.790Z</updated>
    
    <content type="html"><![CDATA[<p>本文记录了IDEA的使用配置和遇到的问题，方便后面查询</p>
<a id="more"></a>
<h1 id="IDEA-集成SVN"><a href="#IDEA-集成SVN" class="headerlink" title="IDEA 集成SVN"></a>IDEA 集成SVN</h1><ul>
<li>环境：</li>
</ul>
<p>OS：Windows 10 (64位)</p>
<p>IDEA版本：IntelliJ IDEA 2016.3.4 Build #IU-163.12024.16, built on January 31, 2017</p>
<ul>
<li>下载安装</li>
</ul>
<p><a href="https://tortoisesvn.net/" target="_blank" rel="external">SVN官网</a>下载SVN并安装。</p>
<p><strong>注意：安装时需要选择安装command line client tools, 默认这一项是不安装的。如果不安装，那么后面找不到svn.exe这个文件</strong></p>
<p><img src="http://oduq3lfcc.bkt.clouddn.com/IDEA-SVN%E5%AE%89%E8%A3%85.png" alt=""></p>
<ul>
<li>在IDEA中配置SVN</li>
</ul>
<p>File-settings-subversion, 勾选Use command line client，选择刚刚安装的SVN中的svn.exe。(如果在bin下找不到这个文件，返回上一步检查安装的时候是否选择安装了command line client tool)</p>
<p><img src="http://oduq3lfcc.bkt.clouddn.com/IDEA-SVN%E5%AE%89%E8%A3%85-setting.png" alt=""></p>
<h1 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h1><p><strong>IDEA乱码一般以下几类，按照如下设置后基本都可以解决</strong></p>
<h2 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h2><p>打开File-Setting, 找到File Encodings这个选项，把encoding设置成你工程的编码即可，一般是UTF-8。也可以在右下角快捷改变当前文件的编码。改变之后会提示你reload文件。</p>
<h2 id="控制台乱码"><a href="#控制台乱码" class="headerlink" title="控制台乱码"></a>控制台乱码</h2><ul>
<li>执行main函数时乱码</li>
</ul>
<p>同样是打开setting，找到 Build,Execution,Deployment &gt; Compiler &gt; Java Compiler， 设置 Additional command line parameters选项为 -encoding utf-8，然后rebuild下，重新运行</p>
<ul>
<li>运行tomcat等容器时乱码</li>
</ul>
<p>打开Run/Debug Configuration,选择你的tomcat</p>
<p>然后在  Server &gt; VM options 设置为 -Dfile.encoding=UTF-8 ，重启tomcat</p>
<h2 id="如果上面不管用，可以尝试下面方法修改配置文件"><a href="#如果上面不管用，可以尝试下面方法修改配置文件" class="headerlink" title="如果上面不管用，可以尝试下面方法修改配置文件"></a>如果上面不管用，可以尝试下面方法修改配置文件</h2><p>打开IDEA安装目录找到 idea.exe.vmoptions （64位为 idea64.exe.vmoptions ）文件， 在文件末尾加上一行 -Dfile.encoding=UTF-8<br>然后重启IDEA，一般问题都可以解决</p>
<h1 id="IDEA-激活"><a href="#IDEA-激活" class="headerlink" title="IDEA 激活"></a>IDEA 激活</h1><p><a href="http://idea.lanyus.com/" target="_blank" rel="external">激活服务器</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录了IDEA的使用配置和遇到的问题，方便后面查询&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://wentuotuo.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="IDEA" scheme="https://wentuotuo.com/tags/IDEA/"/>
    
      <category term="乱码" scheme="https://wentuotuo.com/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Maven学习笔记</title>
    <link href="https://wentuotuo.com/2017/01/16/%E5%B7%A5%E5%85%B7/Maven-tutorial/"/>
    <id>https://wentuotuo.com/2017/01/16/工具/Maven-tutorial/</id>
    <published>2017-01-16T06:13:57.000Z</published>
    <updated>2017-03-09T02:59:10.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Maven-学习笔记"><a href="#Maven-学习笔记" class="headerlink" title="Maven 学习笔记"></a>Maven 学习笔记</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>Maven 命令基本格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mvn &lt;plugin-prefix&gt;:&lt;goal&gt; -D&lt;属性名&gt;=&lt;属性值&gt;</div><div class="line">mvn &lt;phase1&gt; &lt;phase2&gt; ...</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="archetype插件命令"><a href="#archetype插件命令" class="headerlink" title="archetype插件命令"></a>archetype插件命令</h3><ul>
<li>mvn archetype:generate 使用指定原型创建一个 Maven 项目。<ul>
<li>属性 interactiveMode=true/false 是否交互模式，默认true</li>
<li>属性 groupId </li>
<li>属性 artifactId</li>
<li>属性 package</li>
<li>属性 archetypeAtifactId 指定建立项目使用的模板，如：maven-archetype-webapp</li>
</ul>
</li>
<li>mvn archetype:create-from-project 使用已有项目创建一个 Maven 项目。</li>
<li>mvn archetype:crawl 从仓库中检索原型。</li>
</ul>
<blockquote>
<p>mvn archetype:generate -DinteractiveMode=false -DgroupId=com.wentuotuo -DartifactId=testMaven -Dpackage=com.wentuotuo.testmaven</p>
</blockquote>
<p>上面命令会在当前目录创建一个名叫testMaven的项目</p>
<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><blockquote>
<p>mvn compile</p>
</blockquote>
<h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><blockquote>
<p>mvn exec:java -Dexec.mainClass=”com.wentuotuo.testMaven.App”</p>
</blockquote>
<h2 id="Maven-项目目录约定"><a href="#Maven-项目目录约定" class="headerlink" title="Maven 项目目录约定"></a>Maven 项目目录约定</h2><ul>
<li>源代码：./src/main/java/</li>
<li>资源文件： ./src/main/resources/</li>
<li>测试代码： ./src/test/</li>
<li>编译成的class文件: ./target/classes/</li>
<li><p>项目整个打包的jar文件： ./target/</p>
</li>
<li><p>GroupId 是项目组织唯一的标识符，实际对应JAVA的包的结构，是main目录里java的目录结构,比如 com.wentuotuo</p>
</li>
<li>ArtifactId 是项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称</li>
</ul>
<h2 id="Maven-生命周期"><a href="#Maven-生命周期" class="headerlink" title="Maven 生命周期"></a>Maven 生命周期</h2><h3 id="clean生命周期"><a href="#clean生命周期" class="headerlink" title="clean生命周期"></a>clean生命周期</h3><ul>
<li>pre-clean 在构建之前进行预清理</li>
<li>clean 执行清理</li>
<li>post-clean 最后清理<blockquote>
<p>mvn post-clean<br>该命令会清理项目编译过程中生成的文件，执行后testMaven中只留下src和pom.xml</p>
</blockquote>
</li>
</ul>
<h3 id="default生命周期"><a href="#default生命周期" class="headerlink" title="default生命周期"></a>default生命周期</h3><ul>
<li>compile 编译项目</li>
<li>test 单元测试</li>
<li>package 打包项目</li>
<li>install 安装到本地仓库</li>
<li>deploy 部署到远程仓库<br>当执行 mvn install 时，将会先执行install之前的3个阶段，完成后再执行install。这也是maven生命周期的重要特性。<h3 id="site生命周期"><a href="#site生命周期" class="headerlink" title="site生命周期"></a>site生命周期</h3></li>
<li>pre-site 生成站点之前做验证</li>
<li>site 生成站点</li>
<li>post-site 生成站点之后做验证</li>
<li>site-deploy 发布站点到远程服务器<blockquote>
<p>mvn post-site<br>该命令会在target目录下生成一个site子目录，打开其中index.html就可以看到生成的站点</p>
</blockquote>
</li>
</ul>
<h3 id="生命周期绑定"><a href="#生命周期绑定" class="headerlink" title="生命周期绑定"></a>生命周期绑定</h3><p>pom.xml 见最下面。主要关注<build>节点中exec插件的配置。</build></p>
<blockquote>
<p>mvn compile<br>执行该条命令时，不仅仅会执行编译，还会执行exec:java -Dexec.mainClass=”com.wentuotuo.testMaven.App”</p>
</blockquote>
<h2 id="Maven-资源库-repository"><a href="#Maven-资源库-repository" class="headerlink" title="Maven 资源库 (repository)"></a>Maven 资源库 (repository)</h2><h3 id="本地资源库"><a href="#本地资源库" class="headerlink" title="本地资源库"></a>本地资源库</h3><p>通过 Maven 安装目录下的 conf\setting.xml 或者 用户 home 目录下的 m2\setting.xml 文件中的 <localrepository> 元素进行设置，默认本地仓库在 ${user.home}/.m2/repository。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>E:\Config\Maven\repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></div></pre></td></tr></table></figure></localrepository></p>
<p>例如上面，我在我用户目录下的 m2\setting.xml 文件中设置了本地仓库地址</p>
<h3 id="远程资源库"><a href="#远程资源库" class="headerlink" title="远程资源库"></a>远程资源库</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 远程资源库 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Public Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://yourhost:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>当 Maven 需要某个插件或者jar包时，总是按照 本地仓库 -&gt; 远程仓库 -&gt; 中央仓库的顺序去寻找。并且从远程和中央仓库下载的插件会保存在本地，下次引用的时候就不需要重新下载了。</strong></p>
<h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.wentuotuo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> <span class="comment">&lt;!-- 项目开发者的域名 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testMaven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> <span class="comment">&lt;!-- 项目名字 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span> <span class="comment">&lt;!-- 指定项目打包的类型,默认jar --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 指定项目的版本 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>mavenQs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 定义项目使用的License --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">license</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">name</span>&gt;</span>Apache 2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">comments</span>&gt;</span>A business-freiendly OSS license<span class="tag">&lt;/<span class="name">comments</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;/<span class="name">license</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 声明该项目所属的组织 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">organization</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">name</span>&gt;</span>Ekimin<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">url</span>&gt;</span>ekimin.github.io<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">organization</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 声明项目的开发者 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">developer</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">id</span>&gt;</span>ymhe<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">name</span>&gt;</span>ymhe<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">email</span>&gt;</span>youremail@gmail.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">url</span>&gt;</span>wentuotuo.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  		</div><div class="line">    		<span class="tag">&lt;<span class="name">organization</span>&gt;</span>Ekimin<span class="tag">&lt;/<span class="name">organization</span>&gt;</span></div><div class="line">    		<span class="comment">&lt;!-- 声明开发者角色 --&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">roles</span>&gt;</span></div><div class="line">    			<span class="tag">&lt;<span class="name">role</span>&gt;</span>developer<span class="tag">&lt;/<span class="name">role</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;/<span class="name">roles</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">timezone</span>&gt;</span>+8<span class="tag">&lt;/<span class="name">timezone</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;/<span class="name">developer</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 声明对项目有贡献的人 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">contributors</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;<span class="name">contributor</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">name</span>&gt;</span>george<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">email</span>&gt;</span>youremail@gmail.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">url</span>&gt;</span>wentuotuo.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  		</div><div class="line">    		<span class="tag">&lt;<span class="name">organization</span>&gt;</span>Ekimin<span class="tag">&lt;/<span class="name">organization</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;<span class="name">roles</span>&gt;</span></div><div class="line">    			<span class="tag">&lt;<span class="name">role</span>&gt;</span>developer<span class="tag">&lt;/<span class="name">role</span>&gt;</span></div><div class="line">    		<span class="tag">&lt;/<span class="name">roles</span>&gt;</span></div><div class="line">    	<span class="tag">&lt;/<span class="name">contributor</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">contributors</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 自定义属性 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.0.2.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">myproperty</span>&gt;</span>testProperty<span class="tag">&lt;/<span class="name">myproperty</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">    </div><div class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- 插件配置 --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>exec-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">executions</span>&gt;</span></div><div class="line">              	<span class="tag">&lt;<span class="name">execution</span>&gt;</span></div><div class="line">              		<span class="comment">&lt;!-- 指定绑定到compile阶段 --&gt;</span></div><div class="line">              		<span class="tag">&lt;<span class="name">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></div><div class="line">              		<span class="comment">&lt;!-- 指定目标,这里goal就相当于mvn exec:java中的java --&gt;</span></div><div class="line">              		<span class="tag">&lt;<span class="name">goals</span>&gt;</span></div><div class="line">              			<span class="tag">&lt;<span class="name">goal</span>&gt;</span>java<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></div><div class="line">              		<span class="tag">&lt;/<span class="name">goals</span>&gt;</span></div><div class="line">              		<span class="comment">&lt;!-- 指定插件参数，即是-D后面的参数 --&gt;</span></div><div class="line">              		<span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">              			<span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.wentuotuo.testMaven.App<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></div><div class="line">              		<span class="tag">&lt;/<span class="name">configuration</span>&gt;</span>            		</div><div class="line">              	<span class="tag">&lt;/<span class="name">execution</span>&gt;</span>            	</div><div class="line">              <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- 定义资源文件夹 --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">resource</span>&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></div><div class="line">          <span class="tag">&lt;/<span class="name">resource</span>&gt;</span>                  </div><div class="line">      <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 远程资源库 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Public Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://yourhost:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 项目依赖 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="setting-xml"><a href="#setting-xml" class="headerlink" title="setting.xml"></a>setting.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"></div><div class="line"><span class="comment">&lt;!--</span></div><div class="line">Licensed to the Apache Software Foundation (ASF) under one</div><div class="line">or more contributor license agreements.  See the NOTICE file</div><div class="line">distributed with this work for additional information</div><div class="line">regarding copyright ownership.  The ASF licenses this file</div><div class="line">to you under the Apache License, Version 2.0 (the</div><div class="line">"License"); you may not use this file except in compliance</div><div class="line">with the License.  You may obtain a copy of the License at</div><div class="line"></div><div class="line">    http://www.apache.org/licenses/LICENSE-2.0</div><div class="line"></div><div class="line">Unless required by applicable law or agreed to in writing,</div><div class="line">software distributed under the License is distributed on an</div><div class="line">"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</div><div class="line">KIND, either express or implied.  See the License for the</div><div class="line">specific language governing permissions and limitations</div><div class="line">under the License.</div><div class="line">--&gt;</div><div class="line"></div><div class="line"><span class="comment">&lt;!--</span></div><div class="line"> | This is the configuration file for Maven. It can be specified at two levels:</div><div class="line"> |</div><div class="line"> |  1. User Level. This settings.xml file provides configuration for a single user,</div><div class="line"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</div><div class="line"> |</div><div class="line"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</div><div class="line"> |</div><div class="line"> |                 -s /path/to/user/settings.xml</div><div class="line"> |</div><div class="line"> |  2. Global Level. This settings.xml file provides configuration for all Maven</div><div class="line"> |                 users on a machine (assuming they're all using the same Maven</div><div class="line"> |                 installation). It's normally provided in</div><div class="line"> |                 $&#123;maven.home&#125;/conf/settings.xml.</div><div class="line"> |</div><div class="line"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</div><div class="line"> |</div><div class="line"> |                 -gs /path/to/global/settings.xml</div><div class="line"> |</div><div class="line"> | The sections in this sample file are intended to give you a running start at</div><div class="line"> | getting the most out of your Maven installation. Where appropriate, the default</div><div class="line"> | values (values used when the setting is not specified) are provided.</div><div class="line"> |</div><div class="line"> |--&gt;</div><div class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0"</span></span></div><div class="line">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"</span>&gt;</div><div class="line">  <span class="comment">&lt;!-- localRepository</span></div><div class="line">   | The path to the local repository maven will use to store artifacts.</div><div class="line">   |</div><div class="line">   | Default: $&#123;user.home&#125;/.m2/repository</div><div class="line">   --&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>E:\Config\Maven\repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></div><div class="line">  </div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- interactiveMode</span></div><div class="line">   | This will determine whether maven prompts you when it needs input. If set to false,</div><div class="line">   | maven will use a sensible default value, perhaps based on some other setting, for</div><div class="line">   | the parameter in question.</div><div class="line">   |</div><div class="line">   | Default: true</div><div class="line">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</div><div class="line">  --&gt;</div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- offline</span></div><div class="line">   | Determines whether maven should attempt to connect to the network when executing a build.</div><div class="line">   | This will have an effect on artifact downloads, artifact deployment, and others.</div><div class="line">   |</div><div class="line">   | Default: false</div><div class="line">  &lt;offline&gt;false&lt;/offline&gt;</div><div class="line">  --&gt;</div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- pluginGroups</span></div><div class="line">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</div><div class="line">   | when invoking a command line like "mvn prefix:goal". Maven will automatically add the group identifiers</div><div class="line">   | "org.apache.maven.plugins" and "org.codehaus.mojo" if these are not already contained in the list.</div><div class="line">   |--&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- pluginGroup</span></div><div class="line">     | Specifies a further group identifier to use for plugin lookup.</div><div class="line">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</div><div class="line">    --&gt;</div><div class="line">  <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- proxies</span></div><div class="line">   | This is a list of proxies which can be used on this machine to connect to the network.</div><div class="line">   | Unless otherwise specified (by system property or command-line switch), the first proxy</div><div class="line">   | specification in this list marked as active will be used.</div><div class="line">   |--&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- proxy</span></div><div class="line">     | Specification for one proxy, to be used in connecting to the network.</div><div class="line">     |</div><div class="line">    &lt;proxy&gt;</div><div class="line">      &lt;id&gt;optional&lt;/id&gt;</div><div class="line">      &lt;active&gt;true&lt;/active&gt;</div><div class="line">      &lt;protocol&gt;http&lt;/protocol&gt;</div><div class="line">      &lt;username&gt;proxyuser&lt;/username&gt;</div><div class="line">      &lt;password&gt;proxypass&lt;/password&gt;</div><div class="line">      &lt;host&gt;proxy.host.net&lt;/host&gt;</div><div class="line">      &lt;port&gt;80&lt;/port&gt;</div><div class="line">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</div><div class="line">    &lt;/proxy&gt;</div><div class="line">    --&gt;</div><div class="line">  <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- servers</span></div><div class="line">   | This is a list of authentication profiles, keyed by the server-id used within the system.</div><div class="line">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</div><div class="line">   |--&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">servers</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- server</span></div><div class="line">     | Specifies the authentication information to use when connecting to a particular server, identified by</div><div class="line">     | a unique name within the system (referred to by the 'id' attribute below).</div><div class="line">     |</div><div class="line">     | <span class="doctag">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</div><div class="line">     |       used together.</div><div class="line">     |</div><div class="line">     --&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">server</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">server</span>&gt;</span></div><div class="line">    </div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- Another sample, using keys to authenticate.</span></div><div class="line">    &lt;server&gt;</div><div class="line">      &lt;id&gt;siteServer&lt;/id&gt;</div><div class="line">      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</div><div class="line">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</div><div class="line">    &lt;/server&gt;</div><div class="line">    --&gt;</div><div class="line">  <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- mirrors</span></div><div class="line">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</div><div class="line">   |</div><div class="line">   | It works like this: a POM may declare a repository to use in resolving certain artifacts.</div><div class="line">   | However, this repository may have problems with heavy traffic at times, so people have mirrored</div><div class="line">   | it to several places.</div><div class="line">   |</div><div class="line">   | That repository definition will have a unique id, so we can create a mirror reference for that</div><div class="line">   | repository, to be used as an alternate download site. The mirror site will be the preferred</div><div class="line">   | server for that repository.</div><div class="line">   |--&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- mirror</span></div><div class="line">     | Specifies a repository mirror site to use instead of a given repository. The repository that</div><div class="line">     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</div><div class="line">     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</div><div class="line">     |</div><div class="line">     --&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>mirrorId<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>WTT mirror<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://yourhost:8081/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></div><div class="line">     </div><div class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- profiles</span></div><div class="line">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</div><div class="line">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</div><div class="line">   | specific paths and repository locations which allow the build to work in the local environment.</div><div class="line">   |</div><div class="line">   | For example, if you have an integration testing plugin - like cactus - that needs to know where</div><div class="line">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</div><div class="line">   | dereferenced during the build process to configure the cactus plugin.</div><div class="line">   |</div><div class="line">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</div><div class="line">   | section of this document (settings.xml) - will be discussed later. Another way essentially</div><div class="line">   | relies on the detection of a system property, either matching a particular value for the property,</div><div class="line">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</div><div class="line">   | value of '1.4' might activate a profile when the build is executed on a JDK version of '1.4.2_07'.</div><div class="line">   | Finally, the list of active profiles can be specified directly from the command line.</div><div class="line">   |</div><div class="line">   | <span class="doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to specifying only artifact</div><div class="line">   |       repositories, plugin repositories, and free-form properties to be used as configuration</div><div class="line">   |       variables for plugins in the POM.</div><div class="line">   |</div><div class="line">   |--&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- profile</span></div><div class="line">     | Specifies a set of introductions to the build process, to be activated using one or more of the</div><div class="line">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</div><div class="line">     | or the command line, profiles have to have an ID that is unique.</div><div class="line">     |</div><div class="line">     | An encouraged best practice for profile identification is to use a consistent naming convention</div><div class="line">     | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', 'user-brett', etc.</div><div class="line">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</div><div class="line">     | to accomplish, particularly when you only have a list of profile id's for debug.</div><div class="line">     |</div><div class="line">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</div><div class="line">     --&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line"></div><div class="line">     <span class="comment">&lt;!--  &lt;activation&gt;</span></div><div class="line">        &lt;jdk&gt;1.4&lt;/jdk&gt;</div><div class="line">      &lt;/activation&gt; --&gt;</div><div class="line"></div><div class="line">      <span class="tag">&lt;<span class="name">repositories</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>WTT repo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://wttrepo<span class="tag">&lt;/<span class="name">url</span>&gt;</span><span class="comment">&lt;!-- 假的地址 --&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span>          </div><div class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></div><div class="line">    </div><div class="line"></div><div class="line">    <span class="comment">&lt;!--</span></div><div class="line">     | Here is another profile, activated by the system property 'target-env' with a value of 'dev',</div><div class="line">     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</div><div class="line">     | might hypothetically look like:</div><div class="line">     |</div><div class="line">     | ...</div><div class="line">     | &lt;plugin&gt;</div><div class="line">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</div><div class="line">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</div><div class="line">     |</div><div class="line">     |   &lt;configuration&gt;</div><div class="line">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</div><div class="line">     |   &lt;/configuration&gt;</div><div class="line">     | &lt;/plugin&gt;</div><div class="line">     | ...</div><div class="line">     |</div><div class="line">     | <span class="doctag">NOTE:</span> If you just wanted to inject this configuration whenever someone set 'target-env' to</div><div class="line">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</div><div class="line">     |</div><div class="line">    &lt;profile&gt;</div><div class="line">      &lt;id&gt;env-dev&lt;/id&gt;</div><div class="line"></div><div class="line">      &lt;activation&gt;</div><div class="line">        &lt;property&gt;</div><div class="line">          &lt;name&gt;target-env&lt;/name&gt;</div><div class="line">          &lt;value&gt;dev&lt;/value&gt;</div><div class="line">        &lt;/property&gt;</div><div class="line">      &lt;/activation&gt;</div><div class="line"></div><div class="line">      &lt;properties&gt;</div><div class="line">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</div><div class="line">      &lt;/properties&gt;</div><div class="line">    &lt;/profile&gt;</div><div class="line">    --&gt;</div><div class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="comment">&lt;!-- activeProfiles</span></div><div class="line">   | List of profiles that are active for all builds.</div><div class="line">   |</div><div class="line">   --&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">activeProfiles</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">activeProfile</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">activeProfile</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt; --&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">activeProfiles</span>&gt;</span></div><div class="line">  </div><div class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Maven-学习笔记&quot;&gt;&lt;a href=&quot;#Maven-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Maven 学习笔记&quot;&gt;&lt;/a&gt;Maven 学习笔记&lt;/h1&gt;&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;p&gt;Maven 命令基本格式&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mvn &amp;lt;plugin-prefix&amp;gt;:&amp;lt;goal&amp;gt; -D&amp;lt;属性名&amp;gt;=&amp;lt;属性值&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mvn &amp;lt;phase1&amp;gt; &amp;lt;phase2&amp;gt; ...&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://wentuotuo.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Maven" scheme="https://wentuotuo.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Hbase新API Demo</title>
    <link href="https://wentuotuo.com/2016/12/22/%E5%A4%A7%E6%95%B0%E6%8D%AE/demo-of-hbase-in-java-new-API-1.X/"/>
    <id>https://wentuotuo.com/2016/12/22/大数据/demo-of-hbase-in-java-new-API-1.X/</id>
    <published>2016-12-22T14:34:08.000Z</published>
    <updated>2017-03-08T07:05:24.788Z</updated>
    
    <content type="html"><![CDATA[<p>HBase 1.0版是一个稳定版本，可以用于生产环境，而对于0.98.x系列版本，HBase开发团队仍然会继续维护和开发。</p>
<p><strong>下面是一个scan表操作的Demo</strong><br><a id="more"></a></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">	<span class="comment">// 创建一个hbase用户</span></div><div class="line">	UserGroupInformation userGroupInformation = UserGroupInformation.createRemoteUser(<span class="string">"hbase"</span>);</div><div class="line">	User user = User.create(userGroupInformation);</div><div class="line">	<span class="comment">// 创建连接</span></div><div class="line"></div><div class="line">	Connection connection = <span class="keyword">null</span>;</div><div class="line">	Table table = <span class="keyword">null</span>;</div><div class="line">	<span class="comment">//Admin admin = null;</span></div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		connection = ConnectionFactory.createConnection(conf, user);</div><div class="line">		table = connection.getTable(TableName.valueOf(tableName));</div><div class="line"><span class="comment">//		admin = connection.getAdmin();</span></div><div class="line"></div><div class="line">		ResultScanner resultScanner = HbaseCommons.scanTable(table);</div><div class="line">		<span class="keyword">for</span> (Result result : resultScanner) &#123;</div><div class="line">			HbaseCommons.printResult(result);</div><div class="line">		&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HBase 1.0版是一个稳定版本，可以用于生产环境，而对于0.98.x系列版本，HBase开发团队仍然会继续维护和开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面是一个scan表操作的Demo&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="大数据" scheme="https://wentuotuo.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="https://wentuotuo.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Hbase" scheme="https://wentuotuo.com/tags/Hbase/"/>
    
  </entry>
  
  <entry>
    <title>CentOs安装配置SS+Chrome+SwitchyOmega配置</title>
    <link href="https://wentuotuo.com/2016/12/08/%E5%B7%A5%E5%85%B7/centos-ss-chrome-omega/"/>
    <id>https://wentuotuo.com/2016/12/08/工具/centos-ss-chrome-omega/</id>
    <published>2016-12-08T02:39:29.000Z</published>
    <updated>2017-03-08T07:05:24.791Z</updated>
    
    <content type="html"><![CDATA[<p>环境：<br>服务器：阿里云香港云服务器一台<br>系统：CentOs 7</p>
<a id="more"></a>
<h1 id="第一步-安装Shadowsocks服务端"><a href="#第一步-安装Shadowsocks服务端" class="headerlink" title="第一步 安装Shadowsocks服务端"></a>第一步 安装Shadowsocks服务端</h1><h2 id="安装ss"><a href="#安装ss" class="headerlink" title="安装ss"></a>安装ss</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# yum install python-setuptools &amp;&amp; easy_install pip </div><div class="line">Loaded plugins: security</div><div class="line">base                                                                                                                                                                                                                                                   | 3.7 kB     00:00     </div><div class="line">epel                                                                                                                                                                                                                                                   | 4.3 kB     00:00     </div><div class="line">epel/primary_db                                                                                                                                                                                                                                        | 5.9 MB     00:05     </div><div class="line">extras                                                                                                                                                                                                                                                 | 3.4 kB     00:00     </div><div class="line">updates                                                                                                                                                                                                                                                | 3.4 kB     00:00     </div><div class="line">updates/primary_db                                                                                                                                                                                                                                     | 3.7 MB     00:03     </div><div class="line">Setting up Install Process</div><div class="line">Package python-setuptools-0.6.10-3.el6.noarch already installed and latest version</div><div class="line">Nothing to do</div><div class="line">Searching for pip</div><div class="line">Best match: pip 7.1.0</div><div class="line">Adding pip 7.1.0 to easy-install.pth file</div><div class="line">Installing pip script to /usr/bin</div><div class="line">Installing pip2.6 script to /usr/bin</div><div class="line">Installing pip2 script to /usr/bin</div><div class="line"></div><div class="line">Using /usr/lib/python2.6/site-packages</div><div class="line">Processing dependencies for pip</div><div class="line">Finished processing dependencies for pip</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# pip install shadowsocks</div><div class="line">/usr/lib/python2.6/site-packages/pip/_vendor/requests/packages/urllib3/util/ssl_.py:90: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.</div><div class="line">  InsecurePlatformWarning</div><div class="line">You are using pip version 7.1.0, however version 9.0.1 is available.</div><div class="line">You should consider upgrading via the &apos;pip install --upgrade pip&apos; command.</div><div class="line">Collecting shadowsocks</div><div class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/02/1e/e3a5135255d06813aca6631da31768d44f63692480af3a1621818008eb4a/shadowsocks-2.8.2.tar.gz</div><div class="line">Installing collected packages: shadowsocks</div><div class="line">  Running setup.py install for shadowsocks</div><div class="line">Successfully installed shadowsocks-2.8.2</div></pre></td></tr></table></figure>
<h2 id="创建配置文件-etc-shadowsocks-json"><a href="#创建配置文件-etc-shadowsocks-json" class="headerlink" title="创建配置文件/etc/shadowsocks.json"></a>创建配置文件/etc/shadowsocks.json</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# touch /etc/shadowsocks.json </div><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# vim /etc/shadowsocks.json</div></pre></td></tr></table></figure>
<p>配置文件内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;server&quot;:&quot;47.90.56.123&quot;,    #服务器地址</div><div class="line">&quot;server_port&quot;:443,  #服务器端口</div><div class="line">&quot;local_address&quot;: &quot;127.0.0.1&quot;, #本地地址</div><div class="line">&quot;local_port&quot;:1080,  #本地端口</div><div class="line">&quot;password&quot;:&quot;myPass&quot;, #用来加密的密码</div><div class="line">&quot;timeout&quot;:600,  #超时时间</div><div class="line">&quot;method&quot;:&quot;rc4-md5&quot; #加密方法，可选择 “bf-cfb”, “aes-256-cfb”, “des-cfb”, “rc4″等。推荐rc4-md5，速度快</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><h3 id="使用配置文件在后台运行shadowsocks服务"><a href="#使用配置文件在后台运行shadowsocks服务" class="headerlink" title="使用配置文件在后台运行shadowsocks服务"></a>使用配置文件在后台运行shadowsocks服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# ssserver -c /etc/shadowsocks.json  -d start</div><div class="line">INFO: loading config from /etc/shadowsocks.json</div><div class="line">2016-12-08 10:49:54 INFO     loading libcrypto from libcrypto.so.10</div><div class="line">started</div></pre></td></tr></table></figure>
<h3 id="无配置文件启动"><a href="#无配置文件启动" class="headerlink" title="无配置文件启动"></a>无配置文件启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssserver -p 443 -k MyPass -m rc4-md5 -d start</div></pre></td></tr></table></figure>
<h2 id="停止服务"><a href="#停止服务" class="headerlink" title="停止服务"></a>停止服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@iZj6c2vq0s1w6wkap2geanZ ~]# ssserver -c /etc/shadowsocks.json  -d stop</div><div class="line">INFO: loading config from /etc/shadowsocks.json</div><div class="line">stopped</div></pre></td></tr></table></figure>
<p>至此，服务器就安装好了</p>
<hr>
<h1 id="Chrome-Omega配置"><a href="#Chrome-Omega配置" class="headerlink" title="Chrome Omega配置"></a>Chrome Omega配置</h1><p><img src="http://oduq3lfcc.bkt.clouddn.com/swithyomega1.png" alt=""></p>
<p><img src="http://oduq3lfcc.bkt.clouddn.com/swithyomega2.png" alt=""></p>
<p><br></p>
<p>AutoProxy规则列表：<a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="external">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境：&lt;br&gt;服务器：阿里云香港云服务器一台&lt;br&gt;系统：CentOs 7&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://wentuotuo.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Linux" scheme="https://wentuotuo.com/tags/Linux/"/>
    
      <category term="ShadowSocks" scheme="https://wentuotuo.com/tags/ShadowSocks/"/>
    
      <category term="SwithyOmega" scheme="https://wentuotuo.com/tags/SwithyOmega/"/>
    
      <category term="翻墙" scheme="https://wentuotuo.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Aria2安装配置</title>
    <link href="https://wentuotuo.com/2016/12/07/%E5%B7%A5%E5%85%B7/Aria2-tutorial/"/>
    <id>https://wentuotuo.com/2016/12/07/工具/Aria2-tutorial/</id>
    <published>2016-12-07T15:31:31.000Z</published>
    <updated>2017-03-08T07:53:16.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认识-Aria2"><a href="#认识-Aria2" class="headerlink" title="认识 Aria2"></a>认识 Aria2</h1><p>Aria2 是一个轻量级多协议和多源 命令行 下载实用工具。它支持 HTTP / HTTPS, FTP, SFTP, bt 和 Metalink。通过内置 Aria2 可以操作 json - rpc 和 xml - rpc。对，Aria2 没有 GUI 图形界面，只有粗糙的命令行界面！但这也正是 Aria2 之轻快好省所在。</p>
<hr>
<a id="more"></a>
<h1 id="linux："><a href="#linux：" class="headerlink" title="linux："></a>linux：</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><hr>
<ul>
<li>直接在软件仓库下载：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install aria2 --或</div><div class="line">apt-get aria2</div><div class="line">……</div></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ul>
<li>在mint上用软件包管理器下载的aria2默认安装在 /usr/share/doc下。</li>
<li>也可以下载源码安装。</li>
</ul>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="建立目录"><a href="#建立目录" class="headerlink" title="建立目录"></a>建立目录</h3><ul>
<li>/etc/software/aria2 用于放置配置文件的地方</li>
<li>/home/aria2/downloads 用于放下载的文件</li>
</ul>
<h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><ul>
<li>/etc/software/aria2/aria2.conf</li>
<li>/etc/software/aria2/aria2.session</li>
<li>/etc/software/aria2/Aria2.log</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">desktop aria2 # pwd</div><div class="line">/etc/software/aria2</div><div class="line">desktop aria2 # ll</div><div class="line">total 12</div><div class="line">drwxr-xr-x 2 root root 4096 7月  23 18:12 ./</div><div class="line">drwxr-xr-x 3 root root 4096 7月  23 18:11 ../</div><div class="line">-rw-r--r-- 1 root root 3846 7月  23 18:12 aria2.conf</div><div class="line">-rw-r--r-- 1 root root    0 7月  23 18:12 aria2.session</div></pre></td></tr></table></figure>
<h3 id="修改ari2-conf：（比较重要的是dir-log-input-file-save-session四个属性）"><a href="#修改ari2-conf：（比较重要的是dir-log-input-file-save-session四个属性）" class="headerlink" title="修改ari2.conf：（比较重要的是dir log input-file  save-session四个属性）"></a>修改ari2.conf：（比较重要的是dir log input-file  save-session四个属性）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line">## &apos;#&apos;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 ##</div><div class="line">## 被注释的选项填写的是默认值, 建议在需要修改时再取消注释  ##</div><div class="line"></div><div class="line">## 文件保存相关 ##</div><div class="line"></div><div class="line"># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置</div><div class="line">dir=/home/aria2/downloads</div><div class="line"># 日志文件保存路径</div><div class="line">log=/etc/software/aria2/Aria2.log</div><div class="line"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</div><div class="line">#disk-cache=32M</div><div class="line"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</div><div class="line"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</div><div class="line"># falloc和trunc则需要文件系统和内核支持</div><div class="line"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</div><div class="line">file-allocation=trunc</div><div class="line"># 断点续传</div><div class="line">continue=true</div><div class="line"></div><div class="line">## 下载连接相关 ##</div><div class="line"></div><div class="line"># 最大同时下载任务数, 运行时可修改, 默认:5</div><div class="line">max-concurrent-downloads=5</div><div class="line"># 同一服务器连接数, 添加时可指定, 默认:1</div><div class="line">max-connection-per-server=5</div><div class="line"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</div><div class="line"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</div><div class="line">min-split-size=10M</div><div class="line"># 单个任务最大线程数, 添加时可指定, 默认:5</div><div class="line">split=5</div><div class="line"># 整体下载速度限制, 运行时可修改, 默认:0</div><div class="line">#max-overall-download-limit=0</div><div class="line"># 单个任务下载速度限制, 默认:0</div><div class="line">#max-download-limit=0</div><div class="line"># 整体上传速度限制, 运行时可修改, 默认:0</div><div class="line">#max-overall-upload-limit=0</div><div class="line"># 单个任务上传速度限制, 默认:0</div><div class="line">#max-upload-limit=0</div><div class="line"># 禁用IPv6, 默认:false</div><div class="line">disable-ipv6=true</div><div class="line"></div><div class="line">## 进度保存相关 ##</div><div class="line"></div><div class="line"># 从会话文件中读取下载任务</div><div class="line">input-file=/etc/software/aria2/aria2.session</div><div class="line"># 在Aria2退出时保存`错误/未完成`的下载任务到会话文件</div><div class="line">save-session=/etc/software/aria2/aria2.session</div><div class="line"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</div><div class="line">#save-session-interval=60</div><div class="line"></div><div class="line">## RPC相关设置 ##</div><div class="line"></div><div class="line"># 启用RPC, 默认:false</div><div class="line">enable-rpc=true</div><div class="line"># 允许所有来源, 默认:false</div><div class="line">rpc-allow-origin-all=true</div><div class="line"># 允许非外部访问, 默认:false</div><div class="line">rpc-listen-all=true</div><div class="line"># 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同</div><div class="line">#event-poll=select</div><div class="line"># RPC监听端口, 端口被占用时可以修改, 默认:6800</div><div class="line">#rpc-listen-port=6800</div><div class="line"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</div><div class="line">#rpc-secret=&lt;TOKEN&gt;</div><div class="line"># 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项</div><div class="line">#rpc-user=&lt;USER&gt;</div><div class="line"># 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项</div><div class="line">#rpc-passwd=&lt;PASSWD&gt;</div><div class="line"></div><div class="line">## BT/PT下载相关 ##</div><div class="line"></div><div class="line"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</div><div class="line">#follow-torrent=true</div><div class="line"># BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999</div><div class="line">listen-port=51413</div><div class="line"># 单个种子最大连接数, 默认:55</div><div class="line">#bt-max-peers=55</div><div class="line"># 打开DHT功能, PT需要禁用, 默认:true</div><div class="line">enable-dht=false</div><div class="line"># 打开IPv6 DHT功能, PT需要禁用</div><div class="line">#enable-dht6=false</div><div class="line"># DHT网络监听端口, 默认:6881-6999</div><div class="line">#dht-listen-port=6881-6999</div><div class="line"># 本地节点查找, PT需要禁用, 默认:false</div><div class="line">#bt-enable-lpd=false</div><div class="line"># 种子交换, PT需要禁用, 默认:true</div><div class="line">enable-peer-exchange=false</div><div class="line"># 每个种子限速, 对少种的PT很有用, 默认:50K</div><div class="line">#bt-request-peer-speed-limit=50K</div><div class="line"># 客户端伪装, PT需要</div><div class="line">peer-id-prefix=-TR2770-</div><div class="line">user-agent=Transmission/2.77</div><div class="line"># 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0</div><div class="line">seed-ratio=0</div><div class="line"># 强制保存会话, 即使任务已经完成, 默认:false</div><div class="line"># 较新的版本开启后会在任务完成后依然保留.aria2文件</div><div class="line">#force-save=false</div><div class="line"># BT校验相关, 默认:true</div><div class="line">#bt-hash-check-seed=true</div><div class="line"># 继续之前的BT任务时, 无需再次校验, 默认:false</div><div class="line">bt-seed-unverified=true</div><div class="line"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</div><div class="line">bt-save-metadata=true</div></pre></td></tr></table></figure>
<h3 id="启动服务并指定aria2配置文件的路径"><a href="#启动服务并指定aria2配置文件的路径" class="headerlink" title="启动服务并指定aria2配置文件的路径"></a>启动服务并指定aria2配置文件的路径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">desktop aria2 # aria2c --conf-path /etc/software/aria2/aria2.conf </div><div class="line"></div><div class="line">07/23 18:13:30 [WARN] Neither --rpc-secret nor a combination of --rpc-user and --rpc-passwd is set. This is insecure. It is extremely recommended to specify --rpc-secret with the adequate secrecy or now deprecated --rpc-user and --rpc-passwd.</div><div class="line"></div><div class="line">07/23 18:13:30 [NOTICE] IPv4 RPC: listening on TCP port 6800</div></pre></td></tr></table></figure>
<h1 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h1><p>基本上Window配置和linux差不多这里简单说下不同的地方</p>
<h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p><strong><a href="http://sourceforge.net/projects/aria2/files/stable/" target="_blank" rel="external">Aria2官方下载地址</a></strong></p>
<h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><h3 id="新建文件-1"><a href="#新建文件-1" class="headerlink" title="新建文件"></a>新建文件</h3><ul>
<li>aria2.conf</li>
<li>aria2.session</li>
<li>Aria2.log</li>
<li>HideRun.vbs</li>
</ul>
<p>同样修改配置文件conf，指定好下载目录，session文件和log文件的地址</p>
<p>而后修改 HideRun.vbs，将 Aria2c.exe 与配置文件 Aria2.conf 链接，并实现无命令行启动。 那么日后打开 Aria2 就双击 HideRun.vbs 这个文件而不是双击 aria2c.exe。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CreateObject(&quot;WScript.Shell&quot;).Run &quot;D:\Aria2\aria2c.exe --conf-path=aria2.conf&quot;,0</div></pre></td></tr></table></figure></p>
<p>将上面路径修改为你aria2c.exe的路径。<br>到这里 Aria2 就配置好了，如果要添加开机自启动将 HideRun.vbs 的快捷方式拖入启动文件夹就 OK 了。</p>
<h1 id="使用WebUI管理下载"><a href="#使用WebUI管理下载" class="headerlink" title="使用WebUI管理下载"></a>使用WebUI管理下载</h1><p>为了方便管理下载，我们可以使用网页来管理下载。</p>
<ul>
<li>WebUI地址 <a href="http://aria2c.com/" target="_blank" rel="external">http://aria2c.com/</a></li>
<li>若提示RPC服务配置出错：<br>JSON-RPC Path 默认为: <a href="http://localhost:6800/jsonrpc" target="_blank" rel="external">http://localhost:6800/jsonrpc</a><br>host: 指运行 Aria2 所在机器的 IP 或者名字<br>port: 使用 –rpc-listen-port 选项设置的端口, 未设置则是 6800<br>普通情况设置为: <a href="http://host:port/jsonrpc" target="_blank" rel="external">http://host:port/jsonrpc</a><br>使用 –rpc-secret=xxxxxx 选项设置为: <a href="http://token:xxxxxx@host:port/jsonrpc" target="_blank" rel="external">http://token:xxxxxx@host:port/jsonrpc</a><br>使用 –rpc-user=user –rpc-passwd=pwd 选项设置为: <a href="http://user:pwd@host:port/jsonrpc" target="_blank" rel="external">http://user:pwd@host:port/jsonrpc</a></li>
</ul>
<p><img src="http://oduq3lfcc.bkt.clouddn.com/Aria%E9%85%8D%E7%BD%AE%E5%9B%BE%E7%89%87.png" alt=""></p>
<h1 id="添加脚本"><a href="#添加脚本" class="headerlink" title="添加脚本"></a>添加脚本</h1><h2 id="迅雷离线"><a href="#迅雷离线" class="headerlink" title="迅雷离线"></a>迅雷离线</h2><p>Chrome Extension: <a href="https://chrome.google.com/webstore/detail/thunderlixianassistant/eehlmkfpnagoieibahhcghphdbjcdmen" target="_blank" rel="external">ThunderLixianAssistant</a><br>UserScript: <a href="https://github.com/binux/ThunderLixianExporter" target="_blank" rel="external">ThunderLixianExporter</a></p>
<h2 id="旋风离线"><a href="#旋风离线" class="headerlink" title="旋风离线"></a>旋风离线</h2><p>UserScript: <a href="https://greasyfork.org/scripts/354-xuanfengex" target="_blank" rel="external">XuanFengEx</a><br>UserScript: <a href="https://greasyfork.org/scripts/2398-lixianexporter" target="_blank" rel="external">LixianExporter</a></p>
<h2 id="百度网盘"><a href="#百度网盘" class="headerlink" title="百度网盘"></a>百度网盘</h2><p>Chrome Extension: <a href="https://chrome.google.com/webstore/detail/mjaenbjdjmgolhoafkohbhhbaiedbkno" target="_blank" rel="external">BaiduExporter</a><br>Firefox Addons: <a href="https://github.com/acgotaku/BaiduExporter" target="_blank" rel="external">BaiduExporter</a><br>UserScript: <a href="https://greasyfork.org/scripts/294-baidupandownloadhelper" target="_blank" rel="external">BaiduPanDownloadHelper</a></p>
<h2 id="其他脚本"><a href="#其他脚本" class="headerlink" title="其他脚本"></a>其他脚本</h2><p>Chrome Extension: <a href="https://chrome.google.com/webstore/detail/nimeojfecmndgolmlmjghjmbpdkhhogl" target="_blank" rel="external">谷歌浏览器aria2插件</a></p>
<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="aria2-不能启动"><a href="#aria2-不能启动" class="headerlink" title="aria2 不能启动"></a>aria2 不能启动</h2><p>清空 aria2.session 内容，重新尝试启动。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;认识-Aria2&quot;&gt;&lt;a href=&quot;#认识-Aria2&quot; class=&quot;headerlink&quot; title=&quot;认识 Aria2&quot;&gt;&lt;/a&gt;认识 Aria2&lt;/h1&gt;&lt;p&gt;Aria2 是一个轻量级多协议和多源 命令行 下载实用工具。它支持 HTTP / HTTPS, FTP, SFTP, bt 和 Metalink。通过内置 Aria2 可以操作 json - rpc 和 xml - rpc。对，Aria2 没有 GUI 图形界面，只有粗糙的命令行界面！但这也正是 Aria2 之轻快好省所在。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="工具" scheme="https://wentuotuo.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Aria2" scheme="https://wentuotuo.com/tags/Aria2/"/>
    
  </entry>
  
  <entry>
    <title>在github上搭建hexo博客</title>
    <link href="https://wentuotuo.com/2016/10/13/%E5%8D%9A%E5%AE%A2/hexo-blog-based-on-github/"/>
    <id>https://wentuotuo.com/2016/10/13/博客/hexo-blog-based-on-github/</id>
    <published>2016-10-13T09:47:25.000Z</published>
    <updated>2017-03-08T07:05:24.786Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本文介绍并记录了hexo博客的搭建过程</strong></p>
<a id="more"></a>
<h1 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h1><p>博客撰写时版本：<br>hexo: 3.2.2<br>node: 6.9.4</p>
<h1 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h1><p>官网下载最新<a href="https://nodejs.org/en/" target="_blank" rel="external">node.js</a>并安装。</p>
<h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>官网下载最新 <a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git for Windows</a> 并安装。<br>Git for Windows 包含git bash 和 git ui两种，其中git bash 就能满足所有需求，git ui 只是多了一个图形界面，安装的时候可以选择不安装。</p>
<h1 id="申请-Github-账号"><a href="#申请-Github-账号" class="headerlink" title="申请 Github 账号"></a>申请 Github 账号</h1><h2 id="官网申请-github-账号"><a href="#官网申请-github-账号" class="headerlink" title="官网申请 github 账号"></a>官网申请 <a href="https://github.com/" target="_blank" rel="external">github</a> 账号</h2><h2 id="生成-ssh-key"><a href="#生成-ssh-key" class="headerlink" title="生成 ssh key"></a>生成 ssh key</h2><p><strong>如果不执行这一步，那么在选择仓库地址的时候需要使用http协议，而且提交要输入github账号密码。如果配置了ssh则不需要</strong></p>
<h2 id="创建一个空的仓库"><a href="#创建一个空的仓库" class="headerlink" title="创建一个空的仓库"></a>创建一个空的仓库</h2><p>建立与你用户名对应的仓库，仓库名必须为 your_user_name.github.io，比如我的仓库为 ekimin.github.io</p>
<h1 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h1><p>任意目录下右键，选择 git bash。在bash中输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure>
<p>如果下载缓慢或失败，尝试VPN或者代理。</p>
<h1 id="使用-hexo-创建博客"><a href="#使用-hexo-创建博客" class="headerlink" title="使用 hexo 创建博客"></a>使用 hexo 创建博客</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>新建一个目录，如blog，在该目录下打开 git bash 进行以下操作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure>
<p>初始化完成后，hexo会在当前目录生成一系列文件，这些就是博客的源码。</p>
<h2 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">或者简写</div><div class="line">hexo g</div></pre></td></tr></table></figure>
<p>完成后你会发现目录下多了一些目录和文件，这些就是 hexo 生成的静态页面相关文件。</p>
<h2 id="本地测试博客"><a href="#本地测试博客" class="headerlink" title="本地测试博客"></a>本地测试博客</h2><p>启动一个本地服务来测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo server</div><div class="line">或者</div><div class="line">hexo s</div></pre></td></tr></table></figure></p>
<p>在浏览器中访问 localhost:4000 查看页面</p>
<h2 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h2><ul>
<li>修改博客目录下 _config.yml 文件 （注意每一项冒号后都有一个空格）<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span> </div><div class="line"><span class="attr">  type:</span> <span class="string">git</span> <span class="comment">#通过git部署</span></div><div class="line"><span class="attr">  repository:</span> <span class="attr">https://github.com/Ekimin/Ekimin.github.io.git</span> <span class="comment">#git仓库地址，需要提前建立 （这里用的是http协议，部署的时候会提示你输入github的账号密码，如果配置了ssh则可以直接使用ssh地址，这种方式不用输入账号密码，比如：git@github.com:Ekimin/Ekimin.github.io.git）</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span> <span class="comment">#分支</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>安装git部署插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>然后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div><div class="line">或者</div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p>登录 ${yourname}.github.io 访问页面</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本文介绍并记录了hexo博客的搭建过程&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="博客" scheme="https://wentuotuo.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://wentuotuo.com/tags/Hexo/"/>
    
      <category term="博客" scheme="https://wentuotuo.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hive和Hbase的关系</title>
    <link href="https://wentuotuo.com/2016/09/25/%E5%A4%A7%E6%95%B0%E6%8D%AE/relation-between-hive-and-hbase/"/>
    <id>https://wentuotuo.com/2016/09/25/大数据/relation-between-hive-and-hbase/</id>
    <published>2016-09-25T09:44:18.000Z</published>
    <updated>2017-03-08T07:05:24.789Z</updated>
    
    <content type="html"><![CDATA[<p><strong>导读</strong></p>
<ul>
<li>什么是Hive？</li>
<li>hive与hbase的关系</li>
</ul>
<a id="more"></a>
<h1 id="什么是Hive？"><a href="#什么是Hive？" class="headerlink" title="什么是Hive？"></a>什么是Hive？</h1><p>Apache Hive数据仓库软件提供对存储在分布式中的大型数据集的查询和管理，它本身是建立在Apache Hadoop之上，主要提供以下功能： </p>
<ol>
<li>它提供了一系列的工具，可用来对数据进行提取/转化/加载（ETL）； </li>
<li>是一种可以存储、查询和分析存储在HDFS（或者HBase）中的大规模数据的机制； </li>
<li>查询是通过MapReduce来完成的（并不是所有的查询都需要MapReduce来完成，比如select * from XXX就不需要； </li>
<li>在Hive0.11对类似select a,b from XXX的查询通过配置也可以不通过MapReduce来完成</li>
</ol>
<p><br></p>
<p>上面的意思很明白了.这里再给他提炼一下： </p>
<ol>
<li>hive是一个数据仓库。</li>
<li>hive基于hadoop。<br>总结为一句话：hive是基于hadoop的数据仓库。</li>
</ol>
<p><br></p>
<p><strong>那么上面“基于”如何理解：</strong></p>
<p>Hive是一种建立在Hadoop文件系统上的数据仓库架构，并对存储在HDFS中的数据进行分析和管理。（也就是说对存储在HDFS中的数据进行分析和管理，我们不想使用手工，我们建立一个工具把，那么这个工具就可以是hive）</p>
<p><br></p>
<p><strong>那么，我们如何来分析和管理那些数据呢？</strong></p>
<p>Hive定义了一种类似SQL的查询语言，被称为HQL，对于熟悉SQL的用户可以直接利用Hive来查询数据。同时，这个语言也允许熟悉 MapReduce 开发者们开发自定义的mappers和reducers来处理内建的mappers和reducers无法完成的复杂的分析工作。Hive可以允许用户编写自己定义的函数UDF，来在查询中使用。Hive中有3种UDF：User Defined Functions（UDF）、User Defined Aggregation Functions（UDAF）、User Defined Table Generating Functions（UDTF）。</p>
<p>今天，Hive已经是一个成功的Apache项目，很多组织把它用作一个通用的、可伸缩的数据处理平台。</p>
<p>当然，Hive和传统的关系型数据库有很大的区别，Hive将外部的任务解析成一个MapReduce可执行计划，而启动MapReduce是一个高延迟的一件事，每次提交任务和执行任务都需要消耗很多时间，这也就决定Hive只能处理一些高延迟的应用（如果你想处理低延迟的应用，你可以去考虑一下Hbase）。同时，由于设计的目标不一样，Hive目前还不支持事务；不能对表数据进行修改（不能更新、删除、插入；只能通过文件追加数据、重新导入数据）；不能对列建立索引（但是Hive支持索引的建立，但是不能提高Hive的查询速度。如果你想提高Hive的查询速度，请学习Hive的分区、桶的应用）。 </p>
<h1 id="hive与hbase的联系与区别"><a href="#hive与hbase的联系与区别" class="headerlink" title="hive与hbase的联系与区别"></a>hive与hbase的联系与区别</h1><h2 id="共同点"><a href="#共同点" class="headerlink" title="共同点"></a>共同点</h2><p>hbase与hive都是架构在hadoop之上的。都是用hadoop作为底层存储</p>
<h2 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h2><ol>
<li>Hive是建立在Hadoop之上为了减少MapReduce jobs编写工作的批处理系统，HBase是为了支持弥补Hadoop对实时操作的缺陷的项目 。 </li>
<li>想象你在操作RMDB数据库，如果是全表扫描，就用Hive+Hadoop,如果是索引访问，就用HBase+Hadoop 。 </li>
<li>Hive query就是MapReduce jobs可以从5分钟到数小时不止，HBase是非常高效的，肯定比Hive高效的多。 </li>
<li>Hive本身不存储和计算数据，它完全依赖于HDFS和MapReduce，Hive中的表纯逻辑。 </li>
<li>hive借用hadoop的MapReduce来完成一些hive中的命令的执行 </li>
<li>hbase是物理表，不是逻辑表，提供一个超大的内存hash表，搜索引擎通过它来存储索引，方便查询操作。 </li>
<li>hbase是列存储。 </li>
<li>hdfs作为底层存储，hdfs是存放文件的系统，而Hbase负责组织文件。 </li>
<li>hive需要用到hdfs存储文件，需要用到MapReduce计算框架。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导读&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是Hive？&lt;/li&gt;
&lt;li&gt;hive与hbase的关系&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="大数据" scheme="https://wentuotuo.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="https://wentuotuo.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Hbase" scheme="https://wentuotuo.com/tags/Hbase/"/>
    
      <category term="Hive" scheme="https://wentuotuo.com/tags/Hive/"/>
    
  </entry>
  
  <entry>
    <title>Hbase工具类</title>
    <link href="https://wentuotuo.com/2016/07/29/%E5%A4%A7%E6%95%B0%E6%8D%AE/tool-unit-of-hbase/"/>
    <id>https://wentuotuo.com/2016/07/29/大数据/tool-unit-of-hbase/</id>
    <published>2016-07-29T09:27:45.000Z</published>
    <updated>2016-07-29T09:28:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hbase工具类，包含若干常用方法。</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.wentuotuo.utils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.Cell;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.CellUtil;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.ClusterStatus;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.HBaseConfiguration;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.HColumnDescriptor;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.HTableDescriptor;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.MasterNotRunningException;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.ServerName;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.TableName;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.ZooKeeperConnectionException;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.Delete;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.Get;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.HBaseAdmin;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.HTable;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.Put;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.Result;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.ResultScanner;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.client.Scan;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.filter.CompareFilter;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.filter.Filter;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.filter.FilterList;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.filter.PageFilter;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.filter.RowFilter;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.filter.SubstringComparator;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.hbase.util.Bytes;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Hbase工具类</div><div class="line"> * </div><div class="line"> **/</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HbaseCommons</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">// 设置hbase的配置文件，hbase会自动从xml中读取信息</span></div><div class="line">	<span class="keyword">static</span> Configuration conf = HBaseConfiguration.create();</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 创建一个表</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名字</div><div class="line">	 * <span class="doctag">@param</span> columnFamilys</div><div class="line">	 *            列簇</div><div class="line">	 * </div><div class="line">	 **/</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createTable</span><span class="params">(String tableName, String[] columnFamilys)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="comment">// 创建表（创建表、删除表使用HBaseAdmin）</span></div><div class="line">		HBaseAdmin admin = <span class="keyword">new</span> HBaseAdmin(conf);</div><div class="line">		<span class="keyword">if</span> (admin.tableExists(tableName)) &#123;</div><div class="line">			System.out.println(<span class="string">"此表，已存在！"</span>);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="comment">// 旧的写法</span></div><div class="line">			<span class="comment">// HTableDescriptor tableDesc=new HTableDescriptor(tableName);</span></div><div class="line">			<span class="comment">// 新的api</span></div><div class="line">			HTableDescriptor tableDesc = <span class="keyword">new</span> HTableDescriptor(TableName.valueOf(tableName));</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (String columnFamily : columnFamilys) &#123;</div><div class="line">				tableDesc.addFamily(<span class="keyword">new</span> HColumnDescriptor(columnFamily));</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			admin.createTable(tableDesc);</div><div class="line">			System.out.println(<span class="string">"建表成功!"</span>);</div><div class="line">		&#125;</div><div class="line">		admin.close();<span class="comment">// 关闭释放资源</span></div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 删除一个表</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            删除的表名</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteTable</span><span class="params">(String tableName)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HBaseAdmin admin = <span class="keyword">new</span> HBaseAdmin(conf);</div><div class="line">		<span class="keyword">if</span> (admin.tableExists(tableName)) &#123;</div><div class="line">			admin.disableTable(tableName);<span class="comment">// 禁用表</span></div><div class="line">			admin.deleteTable(tableName);<span class="comment">// 删除表</span></div><div class="line">			System.out.println(<span class="string">"删除表成功!"</span>);</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			System.out.println(<span class="string">"删除的表不存在！"</span>);</div><div class="line">		&#125;</div><div class="line">		admin.close();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 插入一条数据</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名</div><div class="line">	 * <span class="doctag">@param</span> columnFamily</div><div class="line">	 *            列簇</div><div class="line">	 * <span class="doctag">@param</span> column</div><div class="line">	 *            列</div><div class="line">	 * <span class="doctag">@param</span> value</div><div class="line">	 *            值</div><div class="line">	 ***/</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertOneRow</span><span class="params">(String tableName, String rowkey, String columnFamily, String column, String value)</span></span></div><div class="line">			<span class="keyword">throws</span> Exception &#123;</div><div class="line"></div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Put put = <span class="keyword">new</span> Put(Bytes.toBytes(rowkey));</div><div class="line">		put.add(Bytes.toBytes(columnFamily), Bytes.toBytes(column), Bytes.toBytes(value));</div><div class="line">		table.put(put);<span class="comment">// 放入表</span></div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 批量添加数据</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名字</div><div class="line">	 * <span class="doctag">@param</span> rows</div><div class="line">	 *            rows的数据格式："rowskey,columnFamily,column,value"</div><div class="line">	 * </div><div class="line">	 **/</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertList</span><span class="params">(String tableName, List&lt;String&gt; rows)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		List&lt;Put&gt; list = <span class="keyword">new</span> ArrayList&lt;Put&gt;();</div><div class="line">		<span class="keyword">for</span> (String r : rows) &#123;</div><div class="line">			String[] splited = r.split(<span class="string">","</span>);</div><div class="line">			<span class="comment">// 添加rowkey</span></div><div class="line">			Put p = <span class="keyword">new</span> Put(Bytes.toBytes(splited[<span class="number">0</span>]));</div><div class="line">			<span class="comment">// 添加其他信息</span></div><div class="line">			p.add(Bytes.toBytes(splited[<span class="number">1</span>]), Bytes.toBytes(splited[<span class="number">2</span>]), Bytes.toBytes(splited[<span class="number">3</span>]));</div><div class="line">			list.add(p);</div><div class="line">		&#125;</div><div class="line">		table.put(list);<span class="comment">// 批量添加</span></div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 删除一条数据</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名</div><div class="line">	 * <span class="doctag">@param</span> row</div><div class="line">	 *            rowkey行键</div><div class="line">	 * </div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteOneRow</span><span class="params">(String tableName, String row)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Delete delete = <span class="keyword">new</span> Delete(Bytes.toBytes(row));</div><div class="line">		table.delete(delete);</div><div class="line">		table.close();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 删除多条数据</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名</div><div class="line">	 * <span class="doctag">@param</span> rows</div><div class="line">	 *            行健集合</div><div class="line">	 * </div><div class="line">	 **/</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteList</span><span class="params">(String tableName, String rows[])</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		List&lt;Delete&gt; list = <span class="keyword">new</span> ArrayList&lt;Delete&gt;();</div><div class="line">		<span class="keyword">for</span> (String row : rows) &#123;</div><div class="line">			Delete del = <span class="keyword">new</span> Delete(Bytes.toBytes(row));</div><div class="line">			list.add(del);</div><div class="line">		&#125;</div><div class="line">		table.delete(list);</div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * rowkey模糊条件查询</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> key</div><div class="line">	 *            模糊rowkey内容</div><div class="line">	 * <span class="doctag">@throws</span> Exception</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultScanner <span class="title">fuzzyScan</span><span class="params">(String tableName, String startKey, String endKey)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Scan s = <span class="keyword">new</span> Scan();</div><div class="line">		<span class="comment">// 可以通过时间限定查询范围</span></div><div class="line">		<span class="comment">// s.setStartRow(startKey.getBytes());</span></div><div class="line">		<span class="comment">// s.setStopRow(endKey.getBytes());</span></div><div class="line">		<span class="keyword">return</span> table.getScanner(s);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * rowkey模糊条件查询</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> key</div><div class="line">	 *            模糊rowkey内容</div><div class="line">	 * <span class="doctag">@param</span> columnFalimy</div><div class="line">	 *            指定列簇</div><div class="line">	 * <span class="doctag">@throws</span> Exception</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fuzzySearchFamily</span><span class="params">(String tableName, String key, String columnFalimy)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Scan s = <span class="keyword">new</span> Scan();</div><div class="line">		RowFilter filter = <span class="keyword">new</span> RowFilter(CompareFilter.CompareOp.EQUAL, <span class="keyword">new</span> SubstringComparator(key));</div><div class="line">		s.setFilter(filter);</div><div class="line">		s.addFamily(columnFalimy.getBytes());</div><div class="line">		ResultScanner rs = table.getScanner(s);</div><div class="line">		<span class="keyword">for</span> (Result r : rs) &#123;</div><div class="line">			printRecoder(r);<span class="comment">// 打印记录</span></div><div class="line">		&#125;</div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 获取一条数据，根据rowkey</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名</div><div class="line">	 * <span class="doctag">@param</span> row</div><div class="line">	 *            行健</div><div class="line">	 * </div><div class="line">	 **/</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">getOneRow</span><span class="params">(String tableName, String row)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Get get = <span class="keyword">new</span> Get(Bytes.toBytes(row));</div><div class="line">		Result result = table.get(get);</div><div class="line">		printRecoder(result);<span class="comment">// 打印记录</span></div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">		<span class="keyword">return</span> result;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 查看某个表下的所有数据</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showAll</span><span class="params">(String tableName)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Scan scan = <span class="keyword">new</span> Scan();</div><div class="line">		scan.setStartRow(Bytes.toBytes(<span class="string">""</span>));</div><div class="line">		scan.setStopRow(Bytes.toBytes(<span class="string">""</span>));</div><div class="line">		ResultScanner rs = table.getScanner(scan);</div><div class="line">		<span class="keyword">for</span> (Result r : rs) &#123;</div><div class="line">			printRecoder(r);<span class="comment">// 打印记录</span></div><div class="line">		&#125;</div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 具体查询row中的列簇的数据</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名</div><div class="line">	 * <span class="doctag">@param</span> rowKey</div><div class="line">	 *            行健</div><div class="line">	 * <span class="doctag">@param</span> columnFalimy</div><div class="line">	 *            列簇</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getFamily</span><span class="params">(String tableName, String rowKey, String columnFalimy)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Get get = <span class="keyword">new</span> Get(Bytes.toBytes(rowKey));</div><div class="line">		get.addFamily(Bytes.toBytes(columnFalimy));</div><div class="line">		Result r = table.get(get);</div><div class="line">		printRecoder(r);</div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 具体查询row中的一条数据</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> tableName</div><div class="line">	 *            表名</div><div class="line">	 * <span class="doctag">@param</span> rowKey</div><div class="line">	 *            行健</div><div class="line">	 * <span class="doctag">@param</span> columnFalimy</div><div class="line">	 *            列簇</div><div class="line">	 * <span class="doctag">@param</span> column</div><div class="line">	 *            值</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getColumn</span><span class="params">(String tableName, String rowKey, String columnFalimy, String column)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">		HTable table = <span class="keyword">new</span> HTable(conf, tableName);</div><div class="line">		Get get = <span class="keyword">new</span> Get(Bytes.toBytes(rowKey));</div><div class="line">		get.addColumn(Bytes.toBytes(columnFalimy), Bytes.toBytes(column));</div><div class="line">		Result r = table.get(get);</div><div class="line">		printRecoder(r);</div><div class="line">		table.close();<span class="comment">// 释放资源</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 打印一条记录的详情</div><div class="line">	 * </div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printRecoder</span><span class="params">(Result result)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">for</span> (Cell cell : result.rawCells()) &#123;</div><div class="line">			System.out.print(<span class="string">"行健: "</span> + <span class="keyword">new</span> String(CellUtil.cloneRow(cell)));</div><div class="line">			System.out.print(<span class="string">" 列簇: "</span> + <span class="keyword">new</span> String(CellUtil.cloneFamily(cell)));</div><div class="line">			System.out.print(<span class="string">" 列: "</span> + <span class="keyword">new</span> String(CellUtil.cloneQualifier(cell)));</div><div class="line">			System.out.print(<span class="string">" 值: "</span> + <span class="keyword">new</span> String(CellUtil.cloneValue(cell)));</div><div class="line">			System.out.println(<span class="string">" 时间戳: "</span> + cell.getTimestamp());</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getRecoder</span><span class="params">(Result result)</span> </span>&#123;</div><div class="line">		<span class="keyword">for</span> (Cell cell : result.rawCells()) &#123;</div><div class="line">			System.out.print(<span class="string">"行健: "</span> + <span class="keyword">new</span> String(CellUtil.cloneRow(cell)));</div><div class="line">			System.out.print(<span class="string">" 列簇: "</span> + <span class="keyword">new</span> String(CellUtil.cloneFamily(cell)));</div><div class="line">			System.out.print(<span class="string">" 列: "</span> + <span class="keyword">new</span> String(CellUtil.cloneQualifier(cell)));</div><div class="line">			System.out.print(<span class="string">" 值: "</span> + <span class="keyword">new</span> String(CellUtil.cloneValue(cell)));</div><div class="line">			System.out.println(<span class="string">" 时间戳: "</span> + cell.getTimestamp());</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">		List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line"></div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">101</span>; i++) &#123;</div><div class="line">			String s = i+<span class="string">",data,info,"</span>+System.currentTimeMillis()+<span class="string">"#info#"</span>+i;</div><div class="line">			String ss = i+<span class="string">",data,other,"</span>+System.currentTimeMillis()+<span class="string">"#other#"</span>+i;</div><div class="line">			list.add(s);</div><div class="line">			list.add(ss);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		HbaseCommons.insertList(<span class="string">"record"</span>, list);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hbase工具类，包含若干常用方法。&lt;/p&gt;
    
    </summary>
    
      <category term="大数据" scheme="https://wentuotuo.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="https://wentuotuo.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Hbase" scheme="https://wentuotuo.com/tags/Hbase/"/>
    
  </entry>
  
  <entry>
    <title>Sqoop抽数</title>
    <link href="https://wentuotuo.com/2016/07/06/%E5%A4%A7%E6%95%B0%E6%8D%AE/manual-of-sqoop/"/>
    <id>https://wentuotuo.com/2016/07/06/大数据/manual-of-sqoop/</id>
    <published>2016-07-06T08:45:22.000Z</published>
    <updated>2017-03-08T07:05:24.788Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从Oracle抽数到Hbase"><a href="#从Oracle抽数到Hbase" class="headerlink" title="从Oracle抽数到Hbase"></a>从Oracle抽数到Hbase</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo -u hdfs sqoop import -connect jdbc:oracle:thin:@192.168.61.27:1521:orcl  -username pira -password pira -table DT_CLEAR_DATA --hbase-table dt_clear_data --column-family info --hbase-row-key ID --hbase-create-table -columns ID,TEXT</div></pre></td></tr></table></figure>
<h2 id="从Oracle抽数到Hive"><a href="#从Oracle抽数到Hive" class="headerlink" title="从Oracle抽数到Hive"></a>从Oracle抽数到Hive</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo -u hdfs sqoop import --driver oracle.jdbc.driver.OracleDriver --connect jdbc:oracle:thin:@192.168.1.104:1521:ora11g --username crpiradev --password crpiradev --append --query &quot;SELECT * FROM DT_CLEAR_DATA WHERE 1=1 AND \$CONDITIONS&quot; --target-dir /usr/local/tmp/hivebackup --split-by DT_CLEAR_DATA.ID</div></pre></td></tr></table></figure>
<h2 id="从Oracle抽数到Hive-1"><a href="#从Oracle抽数到Hive-1" class="headerlink" title="从Oracle抽数到Hive"></a>从Oracle抽数到Hive</h2><ul>
<li><p>根据Oracle中某表，在HIVE中建立相同的表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sqoop create-hive-table -connect jdbc:oracle:thin:@192.168.1.51:1521:orcl -username pira -password &apos;pira!51&apos; -table DT_MANAGE --hive-table fall_in_db.DT_MANAGE</div></pre></td></tr></table></figure>
</li>
<li><p>抽数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LOAD DATA INPATH &apos;/amarsoft/test/hivebackup/dt_clear_data/part-m-*&apos; OVERWRITE INTO TABLE dt_clear_data</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;从Oracle抽数到Hbase&quot;&gt;&lt;a href=&quot;#从Oracle抽数到Hbase&quot; class=&quot;headerlink&quot; title=&quot;从Oracle抽数到Hbase&quot;&gt;&lt;/a&gt;从Oracle抽数到Hbase&lt;/h2&gt;&lt;figure class=&quot;highli
    
    </summary>
    
      <category term="大数据" scheme="https://wentuotuo.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="大数据" scheme="https://wentuotuo.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Sqoop" scheme="https://wentuotuo.com/tags/Sqoop/"/>
    
  </entry>
  
  <entry>
    <title>Java实现Jaccard算法去重</title>
    <link href="https://wentuotuo.com/2016/04/09/Java/jaccard-algorithm-in-java/"/>
    <id>https://wentuotuo.com/2016/04/09/Java/jaccard-algorithm-in-java/</id>
    <published>2016-04-09T11:25:34.000Z</published>
    <updated>2017-03-08T07:05:24.785Z</updated>
    
    <content type="html"><![CDATA[<p>最近项目需求，需要对大量大文本进行去重，研究了一下相关算法，最后确定在Jaccard算法上，这里记录下实现过程。</p>
<a id="more"></a>
<h1 id="Jaccard-算法"><a href="#Jaccard-算法" class="headerlink" title="Jaccard 算法"></a>Jaccard 算法</h1><p>算法相关简介网上已经有很多介绍了，这里推荐一篇个人认为写得还不错的：<a href="http://blog.csdn.net/ygrx/article/details/12748857" target="_blank" rel="external">传送门</a></p>
<h1 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h1><p>关于分词也有很多选择，我这里选择的是HanLP的分词，因为对中文的支持做的比较好。</p>
<p><a href="http://hanlp.linrunsoft.com/" target="_blank" rel="external">HanLP官网</a></p>
<h1 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h1><p>记得当时在研究生语义分析课的时候学习过倒排索引的概念，但是实际运用中才发现神奇，倒排过后查询效率提升一个台阶。</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.amarsoft.proj.jaccard;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.sql.Connection;</div><div class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</div><div class="line"><span class="keyword">import</span> java.sql.ResultSet;</div><div class="line"><span class="keyword">import</span> java.sql.SQLException;</div><div class="line"><span class="keyword">import</span> java.sql.Statement;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.LinkedList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.solr.client.solrj.SolrServer;</div><div class="line"><span class="keyword">import</span> org.apache.solr.client.solrj.SolrServerException;</div><div class="line"><span class="keyword">import</span> org.apache.solr.client.solrj.impl.HttpSolrServer;</div><div class="line"><span class="keyword">import</span> org.apache.solr.common.SolrInputDocument;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.amarsoft.are.ARE;</div><div class="line"><span class="keyword">import</span> com.amarsoft.proj.struct.TextModel;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClearText</span> </span>&#123;</div><div class="line"><span class="comment">/**</span></div><div class="line">	 * 去重</div><div class="line">	 * </div><div class="line">	 * <span class="doctag">@param</span> serialNoTextModelMap</div><div class="line">	 *            待去重Map</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, TextModel&gt; <span class="title">clearNewText</span><span class="params">(Map&lt;String, TextModel&gt; serialNoTextModelMap)</span> </span>&#123;</div><div class="line">		Map&lt;String, TextModel&gt; repTextModelMap = <span class="keyword">new</span> HashMap&lt;String, TextModel&gt;();</div><div class="line">		<span class="comment">// 对待去重文章Map进行排序</span></div><div class="line">		List&lt;Map.Entry&lt;String, TextModel&gt;&gt; sortedSerialNoTextMapEntry = <span class="keyword">new</span> CommonMethod()</div><div class="line">				.sortByWordsCount(serialNoTextModelMap, <span class="number">2</span>);</div><div class="line">		Map&lt;String, List&lt;TextModel&gt;&gt; wordsTextListMap = <span class="keyword">new</span> HashMap&lt;String, List&lt;TextModel&gt;&gt;();<span class="comment">// 存储&lt;分词,有该分词的所有文章模型列表&gt;的Map(倒排列表)</span></div><div class="line">		<span class="keyword">for</span> (Map.Entry&lt;String, TextModel&gt; entry : sortedSerialNoTextMapEntry) &#123; <span class="comment">// 遍历排序后的Map</span></div><div class="line">			String serialNo = entry.getKey();<span class="comment">// 文章序列号</span></div><div class="line">			String[] wordsSet = <span class="keyword">null</span>;</div><div class="line">			wordsSet = HanLPCutWords.getWords(entry.getValue().getText());<span class="comment">// 从数据库获取分词</span></div><div class="line"></div><div class="line">			Map&lt;String, Integer&gt; currentWordCountMap = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();<span class="comment">// 当前文章每个分词出现的次数</span></div><div class="line">			Map&lt;String, Integer&gt; serialNoDupCountMap = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();<span class="comment">// 存储与该文章的分词重复的文章的serialno和分词重复次数的Map</span></div><div class="line">			<span class="comment">// 遍历分词数组			</span></div><div class="line">			<span class="keyword">for</span> (String word : wordsSet) &#123;</div><div class="line">				<span class="comment">// 该文章当前该分词数量+1				</span></div><div class="line">				<span class="keyword">if</span> (currentWordCountMap.containsKey(word)) &#123;</div><div class="line">					<span class="keyword">int</span> cCount = currentWordCountMap.get(word);</div><div class="line">					cCount++;</div><div class="line">					currentWordCountMap.put(word, cCount);</div><div class="line">				&#125; <span class="keyword">else</span> &#123;</div><div class="line">					currentWordCountMap.put(word, <span class="number">1</span>);</div><div class="line">				&#125;</div><div class="line"></div><div class="line">				<span class="keyword">if</span> (wordsTextListMap.containsKey(word)) &#123;<span class="comment">// 分词已经存在于wordsTextListMap中了</span></div><div class="line">					</div><div class="line">					<span class="comment">// 根据重复的分词所属的文章，将重复分词数记录到serialNoDupCountMap</span></div><div class="line">					List&lt;TextModel&gt; textModelList = wordsTextListMap.get(word);<span class="comment">// 取得该分词对应的文章模型列表</span></div><div class="line">					<span class="keyword">for</span> (TextModel textModel : textModelList) &#123;</div><div class="line">						String dupSerialNo = textModel.getSerialNo();<span class="comment">// 与该分词有重复的文章的serialno</span></div><div class="line">						</div><div class="line">						<span class="keyword">if</span> (entry.getKey().equals(dupSerialNo)) &#123;</div><div class="line">							<span class="keyword">continue</span>;<span class="comment">// 跳过自己</span></div><div class="line">						&#125;						</div><div class="line">						<span class="comment">// 跳过word数量小于当前遍历文章word数的文章。</span></div><div class="line"><span class="comment">//						if (textModel.getCurrentWordCount() &lt; currentWordCountMap.get(word)) &#123;</span></div><div class="line"><span class="comment">//							continue;</span></div><div class="line"><span class="comment">//						&#125;</span></div><div class="line">						<span class="comment">// 将所有包含该分词的文章对应的重复次数+1</span></div><div class="line">						<span class="keyword">if</span> (serialNoDupCountMap.containsKey(dupSerialNo)) &#123;</div><div class="line">							<span class="keyword">int</span> dupCount = serialNoDupCountMap.get(dupSerialNo);</div><div class="line">							dupCount++;</div><div class="line">							serialNoDupCountMap.put(dupSerialNo, dupCount);</div><div class="line">							</div><div class="line">						&#125; <span class="keyword">else</span> &#123;</div><div class="line">							serialNoDupCountMap.put(dupSerialNo, <span class="number">1</span>);</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">					<span class="comment">// 将本次遍历的文章加入到wordsTextListMap</span></div><div class="line">					List&lt;TextModel&gt; tModelList = wordsTextListMap.get(word);</div><div class="line">					<span class="keyword">if</span> (!tModelList.contains(entry.getValue())) &#123;</div><div class="line">						TextModel tModel = entry.getValue();</div><div class="line">						tModel.setCurrentWordCount(tModel.getCurrentWordCount() + <span class="number">1</span>);</div><div class="line">						tModelList.add(tModel);</div><div class="line">						wordsTextListMap.put(word, tModelList);</div><div class="line">					&#125;</div><div class="line"></div><div class="line">				&#125; <span class="keyword">else</span> &#123;<span class="comment">// 分词不存在,新增</span></div><div class="line">					List&lt;TextModel&gt; tModelList = <span class="keyword">new</span> LinkedList&lt;TextModel&gt;();</div><div class="line">					TextModel tModel = entry.getValue();</div><div class="line">					tModel.setCurrentWordCount(<span class="number">1</span>);</div><div class="line">					tModelList.add(tModel);</div><div class="line">					wordsTextListMap.put(word, tModelList);</div><div class="line">				&#125;</div><div class="line">			&#125; <span class="comment">// 遍历分词数组结束,此时已经处理完该文章对应的所有分词</span></div><div class="line"></div><div class="line">			<span class="comment">// 去重，serialNoDupCountMap此时存放了之前遍历过的文章与本次遍历的文章分词重复的个数,遍历它，计算重复分词数占较少分词数文章的比例，标记超过阈值的任务文章</span></div><div class="line">			<span class="keyword">int</span> currentWordsCount = entry.getValue().getWordCount();<span class="comment">// 当前遍历的文章的分词数（因为已经倒序过了，所以是目前最少的）</span></div><div class="line">			<span class="comment">// 遍历</span></div><div class="line">			<span class="keyword">for</span> (Map.Entry&lt;String, Integer&gt; dealRepEntry : serialNoDupCountMap.entrySet()) &#123;</div><div class="line">				<span class="comment">// 若比例超过阈值，判定为重复文章，此时将较短（即本次遍历的）文章标记为重复，并记录它与谁重复(RID)</span></div><div class="line">				<span class="keyword">double</span> rate = dealRepEntry.getValue() * <span class="number">1.0</span> / currentWordsCount;<span class="comment">// 重复比例</span></div><div class="line">				<span class="keyword">if</span> (rate &gt; JaccardTextSimilarity.ACCURACY) &#123;</div><div class="line">					String RID = dealRepEntry.getKey();</div><div class="line">					<span class="keyword">if</span> (RID.equals(serialNo)) &#123;</div><div class="line">						<span class="keyword">continue</span>;</div><div class="line">					&#125;</div><div class="line">					TextModel repTextModel = serialNoTextModelMap.get(serialNo);</div><div class="line">					String repStatus = <span class="string">"-2"</span>;<span class="comment">// 算法重复标志 -2</span></div><div class="line">					repTextModel.setStatus(repStatus);</div><div class="line">					repTextModel.setRID(RID);</div><div class="line">					<span class="comment">//debug:</span></div><div class="line">					ARE.getLog().info(<span class="string">"发现重复文章："</span> + serialNo + <span class="string">"和"</span> + RID);</div><div class="line">					</div><div class="line">					<span class="comment">// 将重复的textModel存入repTextModelMap.</span></div><div class="line">					repTextModelMap.put(serialNo, repTextModel);					</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="comment">// 遍历排序后的Map结束</span></div><div class="line">		<span class="keyword">return</span> repTextModelMap;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近项目需求，需要对大量大文本进行去重，研究了一下相关算法，最后确定在Jaccard算法上，这里记录下实现过程。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://wentuotuo.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wentuotuo.com/tags/Java/"/>
    
      <category term="Jaccard" scheme="https://wentuotuo.com/tags/Jaccard/"/>
    
      <category term="算法" scheme="https://wentuotuo.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>使用UUID</title>
    <link href="https://wentuotuo.com/2016/02/21/Java/UUID-usage/"/>
    <id>https://wentuotuo.com/2016/02/21/Java/UUID-usage/</id>
    <published>2016-02-21T08:46:20.000Z</published>
    <updated>2017-03-08T07:05:24.785Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是UUID"><a href="#什么是UUID" class="headerlink" title="什么是UUID"></a>什么是UUID</h1><p>UUID含义是通用唯一识别码 (Universally Unique Identifier)，这是一个软件建构的标准，也是被开源软件基金会 (Open Software Foundation, OSF) 的组织在分布式计算环境 (Distributed Computing Environment, DCE) 领域的一部份。UUID 的目的，是让分布式系统中的所有元素，都能有唯一的辨识资讯，而不需要透过中央控制端来做辨识资讯的指定。如此一来，每个人都可以建立不与其它人冲突的 UUID。在这样的情况下，就不需考虑数据库建立时的名称重复问题。目前最广泛应用的 UUID，即是微软的 Microsoft’s Globally Unique Identifiers (GUIDs)，而其他重要的应用，则有 Linux ext2/ext3 档案系统、LUKS 加密分割区、GNOME、KDE、Mac OS X 等等。<br><br><br>UUID由以下几部分的组成：当前日期和时间(UUID的第一个部分与时间有关，如果你在生成一个UUID之后，过几秒又生成一个UUID，则第一个部分不同，其余相同)，时钟序列，全局唯一的IEEE机器识别号（如果有网卡，从网卡获得，没有网卡以其他方式获得），UUID的唯一缺陷在于生成的结果串会比较长。 </p>
<a id="more"></a>
<h1 id="生成UUID"><a href="#生成UUID" class="headerlink" title="生成UUID"></a>生成UUID</h1><p>生成UUID的java实现非常简单：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.UUID;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UUIDTest</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</div><div class="line">        UUID uuid = UUID.randomUUID();</div><div class="line">        String result = uuid.toString();</div><div class="line">        System.out.println(result);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>上面程序生成的UUID: 1d421c2c-b6d7-4f9b-8456-99b6b36199ec</p>
<p><strong>实际情况下，我们通常不需要中间的横杠</strong></p>
<p>以下是完整的实现和测试</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UUIDTest</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getUUID</span><span class="params">()</span> </span>&#123;</div><div class="line">        UUID uuid = UUID.randomUUID();</div><div class="line">        String str = uuid.toString();</div><div class="line">        <span class="comment">// 去掉"-"符号</span></div><div class="line">        String temp = str.substring(<span class="number">0</span>, <span class="number">8</span>) + str.substring(<span class="number">9</span>, <span class="number">13</span>) + str.substring(<span class="number">14</span>, <span class="number">18</span>) + str.substring(<span class="number">19</span>, <span class="number">23</span>) + str.substring(<span class="number">24</span>);</div><div class="line">        <span class="keyword">return</span> str+<span class="string">","</span>+temp;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//获得指定数量的UUID</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] getUUID(<span class="keyword">int</span> num) &#123;</div><div class="line">        <span class="keyword">if</span> (num &lt; <span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        String[] strings = <span class="keyword">new</span> String[num];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</div><div class="line">            strings[i] = getUUID();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> strings;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        String[] strings = getUUID(<span class="number">10</span>);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strings.length; i++) &#123;</div><div class="line">            System.out.println(<span class="string">"UUID["</span>+i+<span class="string">"]=====&gt;"</span>+strings[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>测试结果</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">UUID[0]=====&gt;09a1512e-dc98-49fd-bc0d-ee65f42a59fa,09a1512edc9849fdbc0dee65f42a59fa</div><div class="line">UUID[1]=====&gt;545886f2-4de0-4297-8005-4c25de5923ff,545886f24de0429780054c25de5923ff</div><div class="line">UUID[2]=====&gt;36cb776c-8349-4106-9a11-26e3b3ad3a64,36cb776c834941069a1126e3b3ad3a64</div><div class="line">UUID[3]=====&gt;9096e155-0a28-4e43-b556-676a2b196f07,9096e1550a284e43b556676a2b196f07</div><div class="line">UUID[4]=====&gt;0b70094c-5502-490b-aa86-a73955b9389b,0b70094c5502490baa86a73955b9389b</div><div class="line">UUID[5]=====&gt;5b0483a1-7e7b-4f29-a0a9-fcf55136a31c,5b0483a17e7b4f29a0a9fcf55136a31c</div><div class="line">UUID[6]=====&gt;bbd13a23-b2c7-4074-9be3-1c15e9950f98,bbd13a23b2c740749be31c15e9950f98</div><div class="line">UUID[7]=====&gt;c2f170f1-3c15-4efb-99f5-710848d446f4,c2f170f13c154efb99f5710848d446f4</div><div class="line">UUID[8]=====&gt;a69c0a50-294c-45bb-ab31-5a70989c94b8,a69c0a50294c45bbab315a70989c94b8</div><div class="line">UUID[9]=====&gt;865a18ed-ac81-41ef-a79f-95d0ed3c829e,865a18edac8141efa79f95d0ed3c829e</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是UUID&quot;&gt;&lt;a href=&quot;#什么是UUID&quot; class=&quot;headerlink&quot; title=&quot;什么是UUID&quot;&gt;&lt;/a&gt;什么是UUID&lt;/h1&gt;&lt;p&gt;UUID含义是通用唯一识别码 (Universally Unique Identifier)，这是一个软件建构的标准，也是被开源软件基金会 (Open Software Foundation, OSF) 的组织在分布式计算环境 (Distributed Computing Environment, DCE) 领域的一部份。UUID 的目的，是让分布式系统中的所有元素，都能有唯一的辨识资讯，而不需要透过中央控制端来做辨识资讯的指定。如此一来，每个人都可以建立不与其它人冲突的 UUID。在这样的情况下，就不需考虑数据库建立时的名称重复问题。目前最广泛应用的 UUID，即是微软的 Microsoft’s Globally Unique Identifiers (GUIDs)，而其他重要的应用，则有 Linux ext2/ext3 档案系统、LUKS 加密分割区、GNOME、KDE、Mac OS X 等等。&lt;br&gt;&lt;/br&gt;&lt;br&gt;UUID由以下几部分的组成：当前日期和时间(UUID的第一个部分与时间有关，如果你在生成一个UUID之后，过几秒又生成一个UUID，则第一个部分不同，其余相同)，时钟序列，全局唯一的IEEE机器识别号（如果有网卡，从网卡获得，没有网卡以其他方式获得），UUID的唯一缺陷在于生成的结果串会比较长。 &lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://wentuotuo.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wentuotuo.com/tags/Java/"/>
    
      <category term="UUID" scheme="https://wentuotuo.com/tags/UUID/"/>
    
  </entry>
  
  <entry>
    <title>JDK安装</title>
    <link href="https://wentuotuo.com/2016/01/14/Java/JDK-install/"/>
    <id>https://wentuotuo.com/2016/01/14/Java/JDK-install/</id>
    <published>2016-01-13T19:06:35.000Z</published>
    <updated>2017-03-08T07:05:24.784Z</updated>
    
    <content type="html"><![CDATA[<p>环境<br>Linux版本：CentOS 6.5、Ubuntu 12.04.5<br>JDK版本：JDK 1.7</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><p>首先卸载自带openjdk，Ubuntu：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get remove openjdk*</div></pre></td></tr></table></figure>
<p>如果是centos</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">先查看 rpm -qa | grep java</div><div class="line">显示如下信息：</div><div class="line">java-1.4.2-gcj-compat-1.4.2.0-40jpp.115</div><div class="line">java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5</div><div class="line">卸载：</div><div class="line">rpm -e --nodeps java-1.4.2-gcj-compat-1.4.2.0-40jpp.115</div><div class="line">rpm -e --nodeps java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5</div><div class="line">还有一些其他的命令</div><div class="line">rpm -qa | grep gcj</div><div class="line">rpm -qa | grep jdk</div><div class="line">如果出现找不到openjdk source的话，那么还可以这样卸载</div><div class="line">yum -y remove java java-1.4.2-gcj-compat-1.4.2.0-40jpp.115</div><div class="line">yum -y remove java java-1.6.0-openjdk-1.6.0.0-1.7.b09.el5</div></pre></td></tr></table></figure>
<h1 id="方法一：手动解压JDK的压缩包，然后设置环境变量"><a href="#方法一：手动解压JDK的压缩包，然后设置环境变量" class="headerlink" title="方法一：手动解压JDK的压缩包，然后设置环境变量"></a>方法一：手动解压JDK的压缩包，然后设置环境变量</h1><p>1.在/usr/目录下创建java目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# mkdir/usr/java</div><div class="line">[root@localhost ~]# cd /usr/java</div></pre></td></tr></table></figure></p>
<p>2.下载，然后解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# curl -O http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.tar.gz </div><div class="line">[root@localhost java]# tar -zxvf jdk-7u79-linux-x64.tar.gz</div></pre></td></tr></table></figure></p>
<p>3.设置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# vi /etc/profile</div></pre></td></tr></table></figure></p>
<p>添加如下内容到文件末尾：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#set java environment</div><div class="line">JAVA_HOME=/usr/java/jdk1.7.0_79</div><div class="line">JRE_HOME=/usr/java/jdk1.7.0_79/jre</div><div class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</div></pre></td></tr></table></figure></p>
<p>让修改生效：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# source /etc/profile</div></pre></td></tr></table></figure></p>
<p>4.验证<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# java -version</div><div class="line">java version &quot;1.7.0_79&quot;</div><div class="line">Java(TM) SE Runtime Environment (build 1.7.0_79-b15)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)</div></pre></td></tr></table></figure></p>
<h1 id="方法二：用yum安装JDK-CentOS"><a href="#方法二：用yum安装JDK-CentOS" class="headerlink" title="方法二：用yum安装JDK(CentOS)"></a>方法二：用yum安装JDK(CentOS)</h1><p>1.查看yum库中都有哪些jdk版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# yum search java|grep jdk</div><div class="line">ldapjdk-javadoc.x86_64 : Javadoc for ldapjdk</div><div class="line">java-1.6.0-openjdk.x86_64 : OpenJDK Runtime Environment</div><div class="line">java-1.6.0-openjdk-demo.x86_64 : OpenJDK Demos</div><div class="line">java-1.6.0-openjdk-devel.x86_64 : OpenJDK Development Environment</div><div class="line">java-1.6.0-openjdk-javadoc.x86_64 : OpenJDK API Documentation</div><div class="line">java-1.6.0-openjdk-src.x86_64 : OpenJDK Source Bundle</div><div class="line">java-1.7.0-openjdk.x86_64 : OpenJDK Runtime Environment</div><div class="line">java-1.7.0-openjdk-demo.x86_64 : OpenJDK Demos</div><div class="line">java-1.7.0-openjdk-devel.x86_64 : OpenJDK Development Environment</div><div class="line">java-1.7.0-openjdk-javadoc.noarch : OpenJDK API Documentation</div><div class="line">java-1.7.0-openjdk-src.x86_64 : OpenJDK Source Bundle</div><div class="line">java-1.8.0-openjdk.x86_64 : OpenJDK Runtime Environment</div><div class="line">java-1.8.0-openjdk-demo.x86_64 : OpenJDK Demos</div><div class="line">java-1.8.0-openjdk-devel.x86_64 : OpenJDK Development Environment</div><div class="line">java-1.8.0-openjdk-headless.x86_64 : OpenJDK Runtime Environment</div><div class="line">java-1.8.0-openjdk-javadoc.noarch : OpenJDK API Documentation</div><div class="line">java-1.8.0-openjdk-src.x86_64 : OpenJDK Source Bundle</div><div class="line">ldapjdk.x86_64 : The Mozilla LDAP Java SDK</div></pre></td></tr></table></figure></p>
<p>2.选择版本，进行安装</p>
<p>我们这里安装1.7版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# yum install java-1.7.0-openjdk</div></pre></td></tr></table></figure></p>
<p>安装完之后，默认的安装目录是在:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75.x86_64</div></pre></td></tr></table></figure></p>
<p>3.设置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# vi /etc/profile</div></pre></td></tr></table></figure></p>
<p>添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#set java environment</div><div class="line">JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.75.x86_64</div><div class="line">JRE_HOME=$JAVA_HOME/jre</div><div class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</div></pre></td></tr></table></figure></p>
<p>让修改生效：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# source /etc/profile</div></pre></td></tr></table></figure></p>
<p>3.验证<br>    同上。</p>
<p>注：因为采用yum安装jdk，系统考虑到多版本的问题，会用alternatives进行版本控制。开始，相应版本的jdk安装在/usr/lib/jvm/之后，会在alternatives中注册，在/etc/alternatives目录下会产生一些链接到/usr/lib/jvm/中刚安装好的jdk版本。</p>
<p>在/usr/bin下面会有链接到/etc/alternatives的相应的文件。比如，/usr/bin下面会有一个链接文件java的映射关系如下：</p>
<p>/usr/bin/java-&gt;/etc/alternatives/java<br>/etc/alternatives/java-&gt; /usr/lib/jvm/jre-1.7.0-openjdk.x86_64/bin/java<br>这样，java命令不用设置环境变量，就可以正常运行了。但如果对于tomcat或其他软件来说还是要设置环境变量。</p>
<p>同样，如果安装新的版本jdk，就会重新链接到最新安装的jdk版本。当然，也可以使用alternatives修改所要使用的版本。</p>
<h1 id="方法三：用rpm安装JDK"><a href="#方法三：用rpm安装JDK" class="headerlink" title="方法三：用rpm安装JDK"></a>方法三：用rpm安装JDK</h1><p>1.下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[hadoop@localhost ~]$ curl -O http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.rpm</div></pre></td></tr></table></figure></p>
<p>2.使用rpm命令安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@localhost  ~]# rpm -ivh jdk-7u79-linux-x64.rpm</div><div class="line">Preparing...               ########################################### [100%]</div><div class="line">  1:jdk                    ###########################################[100%]</div><div class="line">Unpacking JAR files...</div><div class="line">       rt.jar...</div><div class="line">       jsse.jar...</div><div class="line">       charsets.jar...</div><div class="line">       tools.jar...</div><div class="line">       localedata.jar...</div><div class="line">       jfxrt.jar...</div></pre></td></tr></table></figure></p>
<p>3.设置环境变量<br>[root@localhost java]# vi /etc/profile<br>添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#set java environment</div><div class="line">JAVA_HOME=/usr/java/jdk1.7.0_79</div><div class="line">JRE_HOME=/usr/java/jdk1.7.0_79/jre</div><div class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</div></pre></td></tr></table></figure></p>
<p>让修改生效：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# source /etc/profile</div></pre></td></tr></table></figure></p>
<p>4.验证<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost java]# java -version</div><div class="line">java version &quot;1.7.0_79&quot;</div><div class="line">Java(TM) SE Runtime Environment (build 1.7.0_79-b15)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)</div></pre></td></tr></table></figure></p>
<p>和yum安装类似，不用设置环境变量就可以，运行java命令。rpm安装方式默认会把jdk安装到/usr/java/jdk1.7.0_79，然后通过三层链接，链接到/usr/bin,具体链接如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# cd /bin</div><div class="line">[root@localhost bin]# ll|grep java</div><div class="line">lrwxrwxrwx. 1 root root     25 Mar 28 11:24 jar -&gt;/usr/java/default/bin/jar</div><div class="line">lrwxrwxrwx. 1 root root     26 Mar 28 11:24 java -&gt; /usr/java/default/bin/java</div><div class="line">lrwxrwxrwx. 1 root root     27 Mar 28 11:24 javac -&gt;/usr/java/default/bin/javac</div><div class="line">lrwxrwxrwx. 1 root root     29 Mar 28 11:24 javadoc -&gt;/usr/java/default/bin/javadoc</div><div class="line">lrwxrwxrwx. 1 root root     28 Mar 28 11:24 javaws -&gt;/usr/java/default/bin/javaws</div><div class="line">lrwxrwxrwx. 1 root root     30 Mar 28 11:24 jcontrol -&gt;/usr/java/default/bin/jcontrol</div><div class="line">[root@localhost bin]# cd /usr/java/</div><div class="line">[root@localhost java]# ll</div><div class="line">total 4</div><div class="line">lrwxrwxrwx. 1 root root   16 Mar 28 11:24 default-&gt; /usr/java/latest</div><div class="line">drwxr-xr-x. 8 root root 4096 Mar 28 11:24 jdk1.7.0_79</div><div class="line">lrwxrwxrwx. 1 root root   21 Mar 28 11:24 latest -&gt; /usr/java/jdk1.7.0_79</div></pre></td></tr></table></figure></p>
<h1 id="方法四：Ubuntu-上使用apt-get安装JDK"><a href="#方法四：Ubuntu-上使用apt-get安装JDK" class="headerlink" title="方法四：Ubuntu 上使用apt-get安装JDK"></a>方法四：Ubuntu 上使用apt-get安装JDK</h1><p>1.查看apt库都有哪些jdk版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">root@Itble:~# apt-cache search java|grep jdk</div><div class="line">default-jdk - Standard Java or Java compatible Development Kit</div><div class="line">default-jdk-doc - Standard Java or Java compatible Development Kit (documentation)</div><div class="line">gcj-4.6-jdk - gcj and classpath development tools for Java(TM)</div><div class="line">gcj-jdk - gcj and classpath development tools for Java(TM)</div><div class="line">openjdk-6-dbg - Java runtime based on OpenJDK (debugging symbols)</div><div class="line">openjdk-6-demo - Java runtime based on OpenJDK (demos and examples)</div><div class="line">openjdk-6-doc - OpenJDK Development Kit (JDK) documentation</div><div class="line">openjdk-6-jdk - OpenJDK Development Kit (JDK)</div><div class="line">openjdk-6-jre-lib - OpenJDK Java runtime (architecture independent libraries)</div><div class="line">openjdk-6-source - OpenJDK Development Kit (JDK) source files</div><div class="line">openjdk-7-dbg - Java runtime based on OpenJDK (debugging symbols)</div><div class="line">openjdk-7-demo - Java runtime based on OpenJDK (demos and examples)</div><div class="line">openjdk-7-doc - OpenJDK Development Kit (JDK) documentation</div><div class="line">openjdk-7-jdk - OpenJDK Development Kit (JDK)</div><div class="line">openjdk-7-source - OpenJDK Development Kit (JDK) source files</div><div class="line">uwsgi-plugin-jvm-openjdk-6 - Java plugin for uWSGI (OpenJDK 6)</div><div class="line">uwsgi-plugin-jwsgi-openjdk-6 - JWSGI plugin for uWSGI (OpenJDK 6)</div><div class="line">openjdk-6-jre - OpenJDK Java runtime, using Hotspot JIT</div><div class="line">openjdk-6-jre-headless - OpenJDK Java runtime, using Hotspot JIT (headless)</div><div class="line">openjdk-7-jre - OpenJDK Java runtime, using Hotspot JIT</div><div class="line">openjdk-7-jre-headless - OpenJDK Java runtime, using Hotspot JIT (headless)</div><div class="line">openjdk-7-jre-lib - OpenJDK Java runtime (architecture independent libraries)</div></pre></td></tr></table></figure></p>
<p>2.选择版本进行安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@Itble:~# apt-get install openjdk-7-jdk</div></pre></td></tr></table></figure></p>
<p>3.设置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@Itble:~# vi /etc/profile</div></pre></td></tr></table></figure></p>
<p>添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#set java environment</div><div class="line">JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-amd64</div><div class="line">JRE_HOME=$JAVA_HOME/jre</div><div class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</div></pre></td></tr></table></figure></p>
<p>让修改生效：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@Itble:~# source /etc/profile</div></pre></td></tr></table></figure></p>
<p>4.验证<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">root@Itble:~# java -version</div><div class="line">java version &quot;1.7.0_79&quot;</div><div class="line">OpenJDK Runtime Environment (IcedTea 2.5.5) (7u79-2.5.5-0ubuntu0.12.04.1)</div><div class="line">OpenJDK 64-Bit Server VM (build 24.79-b02, mixed mode)</div></pre></td></tr></table></figure></p>
<p>Ubuntu的apt-get安装方式和CentOS的yum安装方式很类似，这里就不再啰嗦。</p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境&lt;br&gt;Linux版本：CentOS 6.5、Ubuntu 12.04.5&lt;br&gt;JDK版本：JDK 1.7&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
      <category term="Java" scheme="https://wentuotuo.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wentuotuo.com/tags/Java/"/>
    
      <category term="Jdk" scheme="https://wentuotuo.com/tags/Jdk/"/>
    
  </entry>
  
  <entry>
    <title>JDBC使用游标分页读取大量数据</title>
    <link href="https://wentuotuo.com/2015/12/25/Java/use-cursor-read-bigdata/"/>
    <id>https://wentuotuo.com/2015/12/25/Java/use-cursor-read-bigdata/</id>
    <published>2015-12-24T16:00:00.000Z</published>
    <updated>2017-03-08T07:05:24.786Z</updated>
    
    <content type="html"><![CDATA[<p>今天同步mysql中一张很大的表到另外一个数据库，折腾了半天写的程序报OOM。后来使用了limit限制每次读取量，新的问题又来了：程序跑到后面莫名卡死，而且效率低下。<br>各种搜索，发现原来jdbc有游标分页读取的功能。</p>
<a id="more"></a>
<p>MySQL JDBC默认客户端数据接收方式为从服务器一次取出所有数据放在客户端内存中，fetch size参数不起作用，当一条SQL返回数据量较大时可能会出现JVM OOM。</p>
<p>解决方法：</p>
<p>设置游标读取</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ps = conn.prepareStatement(sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);</div><div class="line">ps.setFetchSize(Integer.MIN_VALUE);</div><div class="line">setFetchDirection(ResultSet.FETCH_REVERSE);</div></pre></td></tr></table></figure>
<p>完整代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.sql.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCursor</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">importData</span><span class="params">(String sql)</span> </span>&#123;</div><div class="line">        String url = <span class="string">"jdbc:mysql://192.168.61.78:3306/bdsyn?user=pira&amp;password=pira&amp;amp;useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;autoReconnect=true&amp;amp;failOverReadOnly=false&amp;amp;maxReconnects=10&amp;amp;rewriteBatchedStatements=true&amp;amp;useCursorFetch=true&amp;amp;defaultFetchSize=1000"</span>;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e1) &#123;</div><div class="line">            e1.printStackTrace();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">long</span> count = <span class="number">0</span>;</div><div class="line"></div><div class="line">        Connection con = <span class="keyword">null</span>;</div><div class="line">        PreparedStatement ps = <span class="keyword">null</span>;</div><div class="line">        Statement st = <span class="keyword">null</span>;</div><div class="line">        ResultSet rs = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            con = DriverManager.getConnection(url);</div><div class="line"></div><div class="line">            ps = con.prepareStatement(sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);</div><div class="line"></div><div class="line">            ps.setFetchSize(Integer.MIN_VALUE);</div><div class="line"></div><div class="line">            ps.setFetchDirection(ResultSet.FETCH_REVERSE);</div><div class="line"></div><div class="line">            rs = ps.executeQuery();</div><div class="line"></div><div class="line">            <span class="keyword">while</span> (rs.next()) &#123;</div><div class="line"></div><div class="line">                count++;</div><div class="line">                <span class="keyword">if</span> (count % <span class="number">10000</span> == <span class="number">0</span>) &#123;</div><div class="line">                    System.out.println(<span class="string">" 第  "</span> + count + <span class="string">" 条数据！"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            System.out.println(<span class="string">"取回数据量为  "</span> + count + <span class="string">" 行！"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</div><div class="line">                    rs.close();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</div><div class="line">                    ps.close();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (st != <span class="keyword">null</span>) &#123;</div><div class="line">                    st.close();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</div><div class="line">                    ps.close();</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> count;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</div><div class="line">        String sql= <span class="string">"select * from dt_clear_data"</span>;</div><div class="line">        importData(sql);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天同步mysql中一张很大的表到另外一个数据库，折腾了半天写的程序报OOM。后来使用了limit限制每次读取量，新的问题又来了：程序跑到后面莫名卡死，而且效率低下。&lt;br&gt;各种搜索，发现原来jdbc有游标分页读取的功能。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://wentuotuo.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wentuotuo.com/tags/Java/"/>
    
      <category term="数据库" scheme="https://wentuotuo.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
